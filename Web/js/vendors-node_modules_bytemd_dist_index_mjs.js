"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkvadmin_front"] = self["webpackChunkvadmin_front"] || []).push([["vendors-node_modules_bytemd_dist_index_mjs"],{

/***/ "./node_modules/bytemd/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/bytemd/dist/index.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Editor\": function() { return /* binding */ Editor; },\n/* harmony export */   \"Viewer\": function() { return /* binding */ Viewer; },\n/* harmony export */   \"getProcessor\": function() { return /* binding */ getProcessor; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_error_cause_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.error.cause.js */ \"./node_modules/core-js/modules/es.error.cause.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_unshift_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.unshift.js */ \"./node_modules/core-js/modules/es.array.unshift.js\");\n/* harmony import */ var codemirror_ssr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! codemirror-ssr */ \"./node_modules/codemirror-ssr/lib/codemirror.js\");\n/* harmony import */ var codemirror_ssr_addon_display_placeholder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! codemirror-ssr/addon/display/placeholder.js */ \"./node_modules/codemirror-ssr/addon/display/placeholder.js\");\n/* harmony import */ var codemirror_ssr_addon_edit_continuelist_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! codemirror-ssr/addon/edit/continuelist.js */ \"./node_modules/codemirror-ssr/addon/edit/continuelist.js\");\n/* harmony import */ var codemirror_ssr_addon_mode_overlay_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! codemirror-ssr/addon/mode/overlay.js */ \"./node_modules/codemirror-ssr/addon/mode/overlay.js\");\n/* harmony import */ var codemirror_ssr_mode_gfm_gfm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! codemirror-ssr/mode/gfm/gfm.js */ \"./node_modules/codemirror-ssr/mode/gfm/gfm.js\");\n/* harmony import */ var codemirror_ssr_mode_markdown_markdown_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! codemirror-ssr/mode/markdown/markdown.js */ \"./node_modules/codemirror-ssr/mode/markdown/markdown.js\");\n/* harmony import */ var codemirror_ssr_mode_xml_xml_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! codemirror-ssr/mode/xml/xml.js */ \"./node_modules/codemirror-ssr/mode/xml/xml.js\");\n/* harmony import */ var codemirror_ssr_mode_yaml_frontmatter_yaml_frontmatter_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! codemirror-ssr/mode/yaml-frontmatter/yaml-frontmatter.js */ \"./node_modules/codemirror-ssr/mode/yaml-frontmatter/yaml-frontmatter.js\");\n/* harmony import */ var codemirror_ssr_mode_yaml_yaml_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! codemirror-ssr/mode/yaml/yaml.js */ \"./node_modules/codemirror-ssr/mode/yaml/yaml.js\");\n/* harmony import */ var select_files__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! select-files */ \"./node_modules/select-files/dist/index.esm.js\");\n/* harmony import */ var word_count__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! word-count */ \"./node_modules/word-count/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! unist-util-visit */ \"./node_modules/unist-util-visit/lib/index.js\");\n/* harmony import */ var tippy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! tippy.js */ \"./node_modules/tippy.js/dist/tippy.esm.js\");\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! hast-util-sanitize */ \"./node_modules/hast-util-sanitize/lib/schema.js\");\n/* harmony import */ var rehype_raw__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rehype-raw */ \"./node_modules/rehype-raw/index.js\");\n/* harmony import */ var rehype_sanitize__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rehype-sanitize */ \"./node_modules/rehype-sanitize/index.js\");\n/* harmony import */ var rehype_stringify__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rehype-stringify */ \"./node_modules/rehype-stringify/lib/index.js\");\n/* harmony import */ var remark_parse__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! remark-parse */ \"./node_modules/remark-parse/index.js\");\n/* harmony import */ var remark_rehype__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! remark-rehype */ \"./node_modules/remark-rehype/lib/index.js\");\n/* harmony import */ var unified__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! unified */ \"./node_modules/unified/lib/index.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! lodash-es */ \"./node_modules/lodash-es/debounce.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! lodash-es */ \"./node_modules/lodash-es/throttle.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst index = \"\";\n\nfunction noop() {}\n\nfunction run(fn) {\n  return fn();\n}\n\nfunction blank_object() {\n  return /* @__PURE__ */Object.create(null);\n}\n\nfunction run_all(fns) {\n  fns.forEach(run);\n}\n\nfunction is_function(thing) {\n  return typeof thing === \"function\";\n}\n\nfunction safe_not_equal(a, b) {\n  return a != a ? b == b : a !== b || a && typeof a === \"object\" || typeof a === \"function\";\n}\n\nfunction not_equal(a, b) {\n  return a != a ? b == b : a !== b;\n}\n\nfunction is_empty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction append(target, node) {\n  target.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n  target.insertBefore(node, anchor || null);\n}\n\nfunction detach(node) {\n  if (node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\n\nfunction destroy_each(iterations, detaching) {\n  for (let i = 0; i < iterations.length; i += 1) {\n    if (iterations[i]) iterations[i].d(detaching);\n  }\n}\n\nfunction element(name) {\n  return document.createElement(name);\n}\n\nfunction text(data) {\n  return document.createTextNode(data);\n}\n\nfunction empty() {\n  return text(\"\");\n}\n\nfunction listen(node, event, handler, options) {\n  node.addEventListener(event, handler, options);\n  return () => node.removeEventListener(event, handler, options);\n}\n\nfunction self(fn) {\n  return function (event) {\n    if (event.target === this) fn.call(this, event);\n  };\n}\n\nfunction attr(node, attribute, value) {\n  if (value == null) node.removeAttribute(attribute);else if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n\nfunction children(element2) {\n  return Array.from(element2.childNodes);\n}\n\nfunction set_data(text2, data) {\n  data = \"\" + data;\n  if (text2.wholeText !== data) text2.data = data;\n}\n\nfunction toggle_class(element2, name, toggle) {\n  element2.classList[toggle ? \"add\" : \"remove\"](name);\n}\n\nfunction custom_event(type, detail, {\n  bubbles = false,\n  cancelable = false\n} = {}) {\n  const e = document.createEvent(\"CustomEvent\");\n  e.initCustomEvent(type, bubbles, cancelable, detail);\n  return e;\n}\n\nlet current_component;\n\nfunction set_current_component(component) {\n  current_component = component;\n}\n\nfunction get_current_component() {\n  if (!current_component) throw new Error(\"Function called outside component initialization\");\n  return current_component;\n}\n\nfunction onMount(fn) {\n  get_current_component().$$.on_mount.push(fn);\n}\n\nfunction afterUpdate(fn) {\n  get_current_component().$$.after_update.push(fn);\n}\n\nfunction onDestroy(fn) {\n  get_current_component().$$.on_destroy.push(fn);\n}\n\nfunction createEventDispatcher() {\n  const component = get_current_component();\n  return (type, detail, {\n    cancelable = false\n  } = {}) => {\n    const callbacks = component.$$.callbacks[type];\n\n    if (callbacks) {\n      const event = custom_event(type, detail, {\n        cancelable\n      });\n      callbacks.slice().forEach(fn => {\n        fn.call(component, event);\n      });\n      return !event.defaultPrevented;\n    }\n\n    return true;\n  };\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\n\nfunction schedule_update() {\n  if (!update_scheduled) {\n    update_scheduled = true;\n    resolved_promise.then(flush);\n  }\n}\n\nfunction tick() {\n  schedule_update();\n  return resolved_promise;\n}\n\nfunction add_render_callback(fn) {\n  render_callbacks.push(fn);\n}\n\nconst seen_callbacks = /* @__PURE__ */new Set();\nlet flushidx = 0;\n\nfunction flush() {\n  if (flushidx !== 0) {\n    return;\n  }\n\n  const saved_component = current_component;\n\n  do {\n    try {\n      while (flushidx < dirty_components.length) {\n        const component = dirty_components[flushidx];\n        flushidx++;\n        set_current_component(component);\n        update(component.$$);\n      }\n    } catch (e) {\n      dirty_components.length = 0;\n      flushidx = 0;\n      throw e;\n    }\n\n    set_current_component(null);\n    dirty_components.length = 0;\n    flushidx = 0;\n\n    while (binding_callbacks.length) binding_callbacks.pop()();\n\n    for (let i = 0; i < render_callbacks.length; i += 1) {\n      const callback = render_callbacks[i];\n\n      if (!seen_callbacks.has(callback)) {\n        seen_callbacks.add(callback);\n        callback();\n      }\n    }\n\n    render_callbacks.length = 0;\n  } while (dirty_components.length);\n\n  while (flush_callbacks.length) {\n    flush_callbacks.pop()();\n  }\n\n  update_scheduled = false;\n  seen_callbacks.clear();\n  set_current_component(saved_component);\n}\n\nfunction update($$) {\n  if ($$.fragment !== null) {\n    $$.update();\n    run_all($$.before_update);\n    const dirty = $$.dirty;\n    $$.dirty = [-1];\n    $$.fragment && $$.fragment.p($$.ctx, dirty);\n    $$.after_update.forEach(add_render_callback);\n  }\n}\n\nconst outroing = /* @__PURE__ */new Set();\nlet outros;\n\nfunction group_outros() {\n  outros = {\n    r: 0,\n    c: [],\n    p: outros\n  };\n}\n\nfunction check_outros() {\n  if (!outros.r) {\n    run_all(outros.c);\n  }\n\n  outros = outros.p;\n}\n\nfunction transition_in(block, local) {\n  if (block && block.i) {\n    outroing.delete(block);\n    block.i(local);\n  }\n}\n\nfunction transition_out(block, local, detach2, callback) {\n  if (block && block.o) {\n    if (outroing.has(block)) return;\n    outroing.add(block);\n    outros.c.push(() => {\n      outroing.delete(block);\n\n      if (callback) {\n        if (detach2) block.d(1);\n        callback();\n      }\n    });\n    block.o(local);\n  } else if (callback) {\n    callback();\n  }\n}\n\nfunction create_component(block) {\n  block && block.c();\n}\n\nfunction mount_component(component, target, anchor, customElement) {\n  const {\n    fragment,\n    after_update\n  } = component.$$;\n  fragment && fragment.m(target, anchor);\n\n  if (!customElement) {\n    add_render_callback(() => {\n      const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\n      if (component.$$.on_destroy) {\n        component.$$.on_destroy.push(...new_on_destroy);\n      } else {\n        run_all(new_on_destroy);\n      }\n\n      component.$$.on_mount = [];\n    });\n  }\n\n  after_update.forEach(add_render_callback);\n}\n\nfunction destroy_component(component, detaching) {\n  const $$ = component.$$;\n\n  if ($$.fragment !== null) {\n    run_all($$.on_destroy);\n    $$.fragment && $$.fragment.d(detaching);\n    $$.on_destroy = $$.fragment = null;\n    $$.ctx = [];\n  }\n}\n\nfunction make_dirty(component, i) {\n  if (component.$$.dirty[0] === -1) {\n    dirty_components.push(component);\n    schedule_update();\n    component.$$.dirty.fill(0);\n  }\n\n  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;\n}\n\nfunction init(component, options, instance2, create_fragment2, not_equal2, props, append_styles, dirty = [-1]) {\n  const parent_component = current_component;\n  set_current_component(component);\n  const $$ = component.$$ = {\n    fragment: null,\n    ctx: [],\n    props,\n    update: noop,\n    not_equal: not_equal2,\n    bound: blank_object(),\n    on_mount: [],\n    on_destroy: [],\n    on_disconnect: [],\n    before_update: [],\n    after_update: [],\n    context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n    callbacks: blank_object(),\n    dirty,\n    skip_bound: false,\n    root: options.target || parent_component.$$.root\n  };\n  append_styles && append_styles($$.root);\n  let ready = false;\n  $$.ctx = instance2 ? instance2(component, options.props || {}, (i, ret, ...rest) => {\n    const value = rest.length ? rest[0] : ret;\n\n    if ($$.ctx && not_equal2($$.ctx[i], $$.ctx[i] = value)) {\n      if (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n      if (ready) make_dirty(component, i);\n    }\n\n    return ret;\n  }) : [];\n  $$.update();\n  ready = true;\n  run_all($$.before_update);\n  $$.fragment = create_fragment2 ? create_fragment2($$.ctx) : false;\n\n  if (options.target) {\n    if (options.hydrate) {\n      const nodes = children(options.target);\n      $$.fragment && $$.fragment.l(nodes);\n      nodes.forEach(detach);\n    } else {\n      $$.fragment && $$.fragment.c();\n    }\n\n    if (options.intro) transition_in(component.$$.fragment);\n    mount_component(component, options.target, options.anchor, options.customElement);\n    flush();\n  }\n\n  set_current_component(parent_component);\n}\n\nclass SvelteComponent {\n  $destroy() {\n    destroy_component(this, 1);\n    this.$destroy = noop;\n  }\n\n  $on(type, callback) {\n    if (!is_function(callback)) {\n      return noop;\n    }\n\n    const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n    callbacks.push(callback);\n    return () => {\n      const index2 = callbacks.indexOf(callback);\n      if (index2 !== -1) callbacks.splice(index2, 1);\n    };\n  }\n\n  $set($$props) {\n    if (this.$$set && !is_empty($$props)) {\n      this.$$.skip_bound = true;\n      this.$$set($$props);\n      this.$$.skip_bound = false;\n    }\n  }\n\n}\n\nconst bold = \"Bold\";\nconst boldText = \"bold text\";\nconst cheatsheet = \"Markdown Cheatsheet\";\nconst closeHelp = \"Close help\";\nconst closeToc = \"Close table of contents\";\nconst code = \"Code\";\nconst codeBlock = \"Code block\";\nconst codeLang = \"lang\";\nconst codeText = \"code\";\nconst exitFullscreen = \"Exit fullscreen\";\nconst exitPreviewOnly = \"Exit preview only\";\nconst exitWriteOnly = \"Exit write only\";\nconst fullscreen = \"Fullscreen\";\nconst h1 = \"Heading 1\";\nconst h2 = \"Heading 2\";\nconst h3 = \"Heading 3\";\nconst h4 = \"Heading 4\";\nconst h5 = \"Heading 5\";\nconst h6 = \"Heading 6\";\nconst headingText = \"heading\";\nconst help = \"Help\";\nconst hr = \"Horizontal rule\";\nconst image = \"Image\";\nconst imageAlt = \"alt\";\nconst imageTitle = \"title\";\nconst italic = \"Italic\";\nconst italicText = \"italic text\";\nconst limited = \"The maximum character limit has been reached\";\nconst lines = \"Lines\";\nconst link = \"Link\";\nconst linkText = \"link text\";\nconst ol = \"Ordered list\";\nconst olItem = \"item\";\nconst preview = \"Preview\";\nconst previewOnly = \"Preview only\";\nconst quote = \"Quote\";\nconst quotedText = \"quoted text\";\nconst shortcuts = \"Shortcuts\";\nconst source = \"Source code\";\nconst sync = \"Scroll sync\";\nconst toc = \"Table of contents\";\nconst top = \"Scroll to top\";\nconst ul = \"Unordered list\";\nconst ulItem = \"item\";\nconst words = \"Words\";\nconst write = \"Write\";\nconst writeOnly = \"Write only\";\nconst en = {\n  bold,\n  boldText,\n  cheatsheet,\n  closeHelp,\n  closeToc,\n  code,\n  codeBlock,\n  codeLang,\n  codeText,\n  exitFullscreen,\n  exitPreviewOnly,\n  exitWriteOnly,\n  fullscreen,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  headingText,\n  help,\n  hr,\n  image,\n  imageAlt,\n  imageTitle,\n  italic,\n  italicText,\n  limited,\n  lines,\n  link,\n  linkText,\n  ol,\n  olItem,\n  preview,\n  previewOnly,\n  quote,\n  quotedText,\n  shortcuts,\n  source,\n  sync,\n  toc,\n  top,\n  ul,\n  ulItem,\n  words,\n  write,\n  writeOnly\n};\nconst icons = {\n  Close: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"m8 8 32 32M8 40 40 8\"/></svg>',\n  H: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M12 5v38M36 5v38M12 24h24\"/></svg>',\n  H1: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M6 8v32M25 8v32M6 24h19M34.226 24 39 19.017V40\"/></svg>',\n  H2: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M6 8v32M24 8v32M7 24h16M32 25c0-3.167 2.667-5 5-5s5 1.833 5 5c0 5.7-10 9.933-10 15h10\"/></svg>',\n  H3: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M6 8v32M24 8v32M7 24h16M32 20h10l-7 9c4 0 7 2 7 6s-3 5-5 5c-2.381 0-4-1-5-2.1\"/></svg>',\n  LevelFourTitle: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M6 8v32M24 8v32M7 24h16M39.977 40V20L31 32.997v2.023h12\"/></svg>',\n  LevelFiveTitle: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M6 8v32M24 8v32M7 24h16M40 21.01h-8v7.024C32 28 34 27 37 27s4 2.534 4 6.5-1 6.5-5 6.5c-3 0-4-2-4-3.992\"/></svg>',\n  LevelSixTitle: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M6 8v32M24 8v32M7 24h16\"/><path stroke=\"currentColor\" stroke-width=\"4\" d=\"M36.5 40a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11Z\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M41.596 24.74C40.778 22.545 38.804 21 36.5 21c-3.038 0-5.5 2.686-5.5 6v7\"/></svg>',\n  TextBold: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M24 24c5.506 0 9.969-4.477 9.969-10S29.506 4 24 4H11v20h13ZM28.031 44C33.537 44 38 39.523 38 34s-4.463-10-9.969-10H11v20h17.031Z\" clip-rule=\"evenodd\"/></svg>',\n  TextItalic: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M20 6h16M12 42h16M29 5.952 19 42\"/></svg>',\n  Quote: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M18.853 9.116C11.323 13.952 7.14 19.58 6.303 26.003 5 36 13.94 40.893 18.47 36.497 23 32.1 20.285 26.52 17.005 24.994c-3.28-1.525-5.286-.994-4.936-3.033.35-2.038 5.016-7.69 9.116-10.322a.749.749 0 0 0 .114-1.02L20.285 9.3c-.44-.572-.862-.55-1.432-.185ZM38.679 9.116c-7.53 4.836-11.714 10.465-12.55 16.887-1.303 9.997 7.637 14.89 12.167 10.494 4.53-4.397 1.815-9.977-1.466-11.503-3.28-1.525-5.286-.994-4.936-3.033.35-2.038 5.017-7.69 9.117-10.322a.749.749 0 0 0 .113-1.02L40.11 9.3c-.44-.572-.862-.55-1.431-.185Z\" clip-rule=\"evenodd\"/></svg>',\n  LinkOne: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"m26.24 16.373-9.14-9.14c-2.661-2.661-7.035-2.603-9.768.131-2.734 2.734-2.793 7.107-.131 9.768l7.935 7.936M32.903 23.003l7.935 7.935c2.661 2.662 2.603 7.035-.13 9.769-2.735 2.734-7.108 2.792-9.77.13l-9.14-9.14\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M26.11 26.142c2.733-2.734 2.792-7.108.13-9.769M21.799 21.798c-2.734 2.734-2.792 7.108-.131 9.769\"/></svg>',\n  Pic: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M5 10a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v28a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V10Z\" clip-rule=\"evenodd\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M14.5 18a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\" clip-rule=\"evenodd\"/><path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"m15 24 5 4 6-7 17 13v4a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-4l10-10Z\"/></svg>',\n  Code: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M16 13 4 25.432 16 37M32 13l12 12.432L32 37\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"4\" d=\"m28 4-7 40\"/></svg>',\n  CodeBrackets: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M16 4c-2 0-5 1-5 5v9c0 3-5 5-5 5s5 2 5 5v11c0 4 3 5 5 5M32 4c2 0 5 1 5 5v9c0 3 5 5 5 5s-5 2-5 5v11c0 4-3 5-5 5\"/></svg>',\n  ListTwo: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M9 42a4 4 0 1 0 0-8 4 4 0 0 0 0 8ZM9 14a4 4 0 1 0 0-8 4 4 0 0 0 0 8ZM9 28a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M21 24h22M21 38h22M21 10h22\"/></svg>',\n  OrderedList: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M9 4v9M12 13H6M12 27H6M6 20s3-3 5 0-5 7-5 7M6 34.5s2-3 5-1 0 4.5 0 4.5 3 2.5 0 4.5-5-1-5-1M11 38H9M9 4 6 6M21 24h22M21 38h22M21 10h22\"/></svg>',\n  DividingLine: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M5 24h38M21 38h6M37 38h6M21 10h6M5 38h6M5 10h6M37 10h6\"/></svg>',\n  AlignTextLeftOne: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M26 24H14M34 15H14M32 33H14\"/></svg>',\n  Helpcenter: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M24 28.625v-4a6 6 0 1 0-6-6\"/><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M24 37.625a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z\" clip-rule=\"evenodd\"/></svg>',\n  LeftExpand: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><rect width=\"28\" height=\"36\" x=\"6\" y=\"6\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" rx=\"2\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M42 6v36\"/></svg>',\n  RightExpand: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><rect width=\"28\" height=\"36\" x=\"14\" y=\"6\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" rx=\"2\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M6 6v36\"/></svg>',\n  OffScreen: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M33 6v9h9M15 6v9H6M15 42v-9H6M33 42v-9h8.9\"/></svg>',\n  FullScreen: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M33 6h9v9M42 33v9h-9M15 42H6v-9M6 15V6h9\"/></svg>',\n  GithubOne: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"4\" d=\"M29.344 30.477c2.404-.5 4.585-1.366 6.28-2.638C38.52 25.668 40 22.314 40 19c0-2.324-.881-4.494-2.407-6.332-.85-1.024 1.636-8.667-.573-7.638-2.21 1.03-5.45 3.308-7.147 2.805A20.712 20.712 0 0 0 24 7c-1.8 0-3.532.223-5.147.634C16.505 8.232 14.259 6 12 5.03c-2.26-.97-1.026 6.934-1.697 7.765C8.84 14.605 8 16.73 8 19c0 3.314 1.79 6.668 4.686 8.84 1.93 1.446 4.348 2.368 7.054 2.822M19.74 30.662c-1.159 1.275-1.738 2.486-1.738 3.632v8.717M29.345 30.477c1.097 1.44 1.646 2.734 1.646 3.88v8.654M6 31.215c.899.11 1.566.524 2 1.24.652 1.075 3.074 5.063 5.825 5.063h4.177\"/></svg>'\n};\n\nfunction createCodeMirror() {\n  const codemirror = (0,codemirror_ssr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n  (0,codemirror_ssr_addon_display_placeholder_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(codemirror);\n  (0,codemirror_ssr_addon_mode_overlay_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(codemirror);\n  (0,codemirror_ssr_mode_xml_xml_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(codemirror);\n  (0,codemirror_ssr_mode_markdown_markdown_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(codemirror);\n  (0,codemirror_ssr_mode_gfm_gfm_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(codemirror);\n  (0,codemirror_ssr_mode_yaml_yaml_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(codemirror);\n  (0,codemirror_ssr_mode_yaml_frontmatter_yaml_frontmatter_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(codemirror);\n  (0,codemirror_ssr_addon_edit_continuelist_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(codemirror);\n  return codemirror;\n}\n\nfunction createEditorUtils(codemirror, editor) {\n  return {\n    wrapText(before, after = before) {\n      const range = editor.somethingSelected() ? editor.listSelections()[0] : editor.findWordAt(editor.getCursor());\n      const from = range.from();\n      const to = range.to();\n      const text2 = editor.getRange(from, to);\n      const fromBefore = codemirror.Pos(from.line, from.ch - before.length);\n      const toAfter = codemirror.Pos(to.line, to.ch + after.length);\n\n      if (editor.getRange(fromBefore, from) === before && editor.getRange(to, toAfter) === after) {\n        editor.replaceRange(text2, fromBefore, toAfter);\n        editor.setSelection(fromBefore, codemirror.Pos(fromBefore.line, fromBefore.ch + text2.length));\n      } else {\n        editor.replaceRange(before + text2 + after, from, to);\n        const cursor = editor.getCursor();\n        editor.setSelection(codemirror.Pos(cursor.line, cursor.ch - after.length - text2.length), codemirror.Pos(cursor.line, cursor.ch - after.length));\n      }\n    },\n\n    replaceLines(replace) {\n      const [selection] = editor.listSelections();\n      const range = [codemirror.Pos(selection.from().line, 0), codemirror.Pos(selection.to().line)];\n      const lines2 = editor.getRange(...range).split(\"\\n\");\n      editor.replaceRange(lines2.map(replace).join(\"\\n\"), ...range);\n      editor.setSelection(...range);\n    },\n\n    appendBlock(content) {\n      const cursor = editor.getCursor();\n      let emptyLine = -1;\n\n      for (let i = cursor.line; i < editor.lineCount(); i++) {\n        if (!editor.getLine(i).trim()) {\n          emptyLine = i;\n          break;\n        }\n      }\n\n      if (emptyLine === -1) {\n        editor.replaceRange(\"\\n\", codemirror.Pos(editor.lineCount()));\n        emptyLine = editor.lineCount();\n      }\n\n      editor.replaceRange(\"\\n\" + content, codemirror.Pos(emptyLine));\n      return codemirror.Pos(emptyLine + 1, 0);\n    },\n\n    selectFiles: select_files__WEBPACK_IMPORTED_MODULE_12__[\"default\"]\n  };\n}\n\nfunction findStartIndex(num, nums) {\n  let startIndex = nums.length - 2;\n\n  for (let i = 0; i < nums.length; i++) {\n    if (num < nums[i]) {\n      startIndex = i - 1;\n      break;\n    }\n  }\n\n  startIndex = Math.max(startIndex, 0);\n  return startIndex;\n}\n\nconst getShortcutWithPrefix = (key, shift = false) => {\n  const shiftPrefix = shift ? \"Shift-\" : \"\";\n  const CmdPrefix = typeof navigator !== \"undefined\" && /Mac/.test(navigator.platform) ? \"Cmd-\" : \"Ctrl-\";\n  return shiftPrefix + CmdPrefix + key;\n};\n\nasync function handleImageUpload({\n  editor,\n  appendBlock,\n  codemirror\n}, uploadImages, files) {\n  const imgs = await uploadImages(files);\n  const pos = appendBlock(imgs.map(({\n    url,\n    alt,\n    title\n  }, i) => {\n    alt = alt != null ? alt : files[i].name;\n    return `![${alt}](${url}${title ? ` \"${title}\"` : \"\"})`;\n  }).join(\"\\n\\n\"));\n  editor.setSelection(pos, codemirror.Pos(pos.line + imgs.length * 2 - 2));\n  editor.focus();\n}\n\nfunction getBuiltinActions(locale, plugins, uploadImages) {\n  const leftActions = [{\n    icon: icons.H,\n    handler: {\n      type: \"dropdown\",\n      actions: [1, 2, 3, 4, 5, 6].map(level => ({\n        title: locale[`h${level}`],\n        icon: [icons.H1, icons.H2, icons.H3, icons.LevelFourTitle, icons.LevelFiveTitle, icons.LevelSixTitle][level - 1],\n        cheatsheet: level <= 3 ? `${\"#\".repeat(level)} ${locale.headingText}` : void 0,\n        handler: {\n          type: \"action\",\n\n          click({\n            replaceLines,\n            editor\n          }) {\n            replaceLines(line => {\n              line = line.trim().replace(/^#*/, \"\").trim();\n              line = \"#\".repeat(level) + \" \" + line;\n              return line;\n            });\n            editor.focus();\n          }\n\n        }\n      }))\n    }\n  }, {\n    title: locale.bold,\n    icon: icons.TextBold,\n    cheatsheet: `**${locale.boldText}**`,\n    handler: {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"B\"),\n\n      click({\n        wrapText,\n        editor\n      }) {\n        wrapText(\"**\");\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.italic,\n    icon: icons.TextItalic,\n    cheatsheet: `*${locale.italicText}*`,\n    handler: {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"I\"),\n\n      click({\n        wrapText,\n        editor\n      }) {\n        wrapText(\"*\");\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.quote,\n    icon: icons.Quote,\n    cheatsheet: `> ${locale.quotedText}`,\n    handler: {\n      type: \"action\",\n\n      click({\n        replaceLines,\n        editor\n      }) {\n        replaceLines(line => \"> \" + line);\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.link,\n    icon: icons.LinkOne,\n    cheatsheet: `[${locale.linkText}](url)`,\n    handler: {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"K\"),\n\n      click({\n        editor,\n        wrapText,\n        codemirror\n      }) {\n        wrapText(\"[\", \"](url)\");\n        const cursor = editor.getCursor();\n        editor.setSelection(codemirror.Pos(cursor.line, cursor.ch + 2), codemirror.Pos(cursor.line, cursor.ch + 5));\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.image,\n    icon: icons.Pic,\n    cheatsheet: `![${locale.imageAlt}](url \"${locale.imageTitle}\")`,\n    handler: uploadImages ? {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"I\", true),\n\n      async click(ctx) {\n        const fileList = await (0,select_files__WEBPACK_IMPORTED_MODULE_12__[\"default\"])({\n          accept: \"image/*\",\n          multiple: true\n        });\n\n        if (fileList == null ? void 0 : fileList.length) {\n          await handleImageUpload(ctx, uploadImages, Array.from(fileList));\n        }\n      }\n\n    } : void 0\n  }, {\n    title: locale.code,\n    icon: icons.Code,\n    cheatsheet: \"`\" + locale.codeText + \"`\",\n    handler: {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"K\", true),\n\n      click({\n        wrapText,\n        editor\n      }) {\n        wrapText(\"`\");\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.codeBlock,\n    icon: icons.CodeBrackets,\n    cheatsheet: \"```\" + locale.codeLang + \"↵\",\n    handler: {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"C\", true),\n\n      click({\n        editor,\n        appendBlock,\n        codemirror\n      }) {\n        const pos = appendBlock(\"```js\\n```\");\n        editor.setSelection(codemirror.Pos(pos.line, 3), codemirror.Pos(pos.line, 5));\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.ul,\n    icon: icons.ListTwo,\n    cheatsheet: `- ${locale.ulItem}`,\n    handler: {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"U\", true),\n\n      click({\n        replaceLines,\n        editor\n      }) {\n        replaceLines(line => \"- \" + line);\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.ol,\n    icon: icons.OrderedList,\n    cheatsheet: `1. ${locale.olItem}`,\n    handler: {\n      type: \"action\",\n      shortcut: getShortcutWithPrefix(\"O\", true),\n\n      click({\n        replaceLines,\n        editor\n      }) {\n        replaceLines((line, i) => `${i + 1}. ${line}`);\n        editor.focus();\n      }\n\n    }\n  }, {\n    title: locale.hr,\n    icon: icons.DividingLine,\n    cheatsheet: \"---\"\n  }];\n  const rightActions = [];\n  plugins.forEach(({\n    actions\n  }) => {\n    if (actions) {\n      actions.forEach(action => {\n        if (!action.position || action.position !== \"right\") leftActions.push(action);else rightActions.unshift(action);\n      });\n    }\n  });\n  return {\n    leftActions,\n    rightActions\n  };\n}\n\nfunction get_each_context$2(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[5] = list[i];\n  return child_ctx;\n}\n\nfunction get_each_context_1$1(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[5] = list[i];\n  return child_ctx;\n}\n\nfunction create_if_block_1$2(ctx) {\n  let li;\n  let div0;\n  let raw_value = ctx[5].icon + \"\";\n  let div1;\n  let t0_value = ctx[5].title + \"\";\n  let t0;\n  let div2;\n  let code2;\n  let t1_value = ctx[5].cheatsheet + \"\";\n  let t1;\n  return {\n    c() {\n      li = element(\"li\");\n      div0 = element(\"div\");\n      div1 = element(\"div\");\n      t0 = text(t0_value);\n      div2 = element(\"div\");\n      code2 = element(\"code\");\n      t1 = text(t1_value);\n      attr(div0, \"class\", \"bytemd-help-icon\");\n      attr(div1, \"class\", \"bytemd-help-title\");\n      attr(div2, \"class\", \"bytemd-help-content\");\n    },\n\n    m(target, anchor) {\n      insert(target, li, anchor);\n      append(li, div0);\n      div0.innerHTML = raw_value;\n      append(li, div1);\n      append(div1, t0);\n      append(li, div2);\n      append(div2, code2);\n      append(code2, t1);\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 4 && raw_value !== (raw_value = ctx2[5].icon + \"\")) div0.innerHTML = raw_value;\n      if (dirty & 4 && t0_value !== (t0_value = ctx2[5].title + \"\")) set_data(t0, t0_value);\n      if (dirty & 4 && t1_value !== (t1_value = ctx2[5].cheatsheet + \"\")) set_data(t1, t1_value);\n    },\n\n    d(detaching) {\n      if (detaching) detach(li);\n    }\n\n  };\n}\n\nfunction create_each_block_1$1(ctx) {\n  let if_block_anchor;\n  let if_block = ctx[5].cheatsheet && create_if_block_1$2(ctx);\n  return {\n    c() {\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n    },\n\n    m(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n    },\n\n    p(ctx2, dirty) {\n      if (ctx2[5].cheatsheet) {\n        if (if_block) {\n          if_block.p(ctx2, dirty);\n        } else {\n          if_block = create_if_block_1$2(ctx2);\n          if_block.c();\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n    },\n\n    d(detaching) {\n      if (if_block) if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n\n  };\n}\n\nfunction create_if_block$3(ctx) {\n  let li;\n  let div0;\n  let raw_value = ctx[5].icon + \"\";\n  let div1;\n  let t0_value = ctx[5].title + \"\";\n  let t0;\n  let div2;\n  let kbd;\n  let t1_value = ctx[5].handler.shortcut + \"\";\n  let t1;\n  return {\n    c() {\n      li = element(\"li\");\n      div0 = element(\"div\");\n      div1 = element(\"div\");\n      t0 = text(t0_value);\n      div2 = element(\"div\");\n      kbd = element(\"kbd\");\n      t1 = text(t1_value);\n      attr(div0, \"class\", \"bytemd-help-icon\");\n      attr(div1, \"class\", \"bytemd-help-title\");\n      attr(div2, \"class\", \"bytemd-help-content\");\n    },\n\n    m(target, anchor) {\n      insert(target, li, anchor);\n      append(li, div0);\n      div0.innerHTML = raw_value;\n      append(li, div1);\n      append(div1, t0);\n      append(li, div2);\n      append(div2, kbd);\n      append(kbd, t1);\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 4 && raw_value !== (raw_value = ctx2[5].icon + \"\")) div0.innerHTML = raw_value;\n      if (dirty & 4 && t0_value !== (t0_value = ctx2[5].title + \"\")) set_data(t0, t0_value);\n      if (dirty & 4 && t1_value !== (t1_value = ctx2[5].handler.shortcut + \"\")) set_data(t1, t1_value);\n    },\n\n    d(detaching) {\n      if (detaching) detach(li);\n    }\n\n  };\n}\n\nfunction create_each_block$2(ctx) {\n  let if_block_anchor;\n  let if_block = ctx[5].handler && ctx[5].handler.type === \"action\" && ctx[5].handler.shortcut && create_if_block$3(ctx);\n  return {\n    c() {\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n    },\n\n    m(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n    },\n\n    p(ctx2, dirty) {\n      if (ctx2[5].handler && ctx2[5].handler.type === \"action\" && ctx2[5].handler.shortcut) {\n        if (if_block) {\n          if_block.p(ctx2, dirty);\n        } else {\n          if_block = create_if_block$3(ctx2);\n          if_block.c();\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n    },\n\n    d(detaching) {\n      if (if_block) if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n\n  };\n}\n\nfunction create_fragment$5(ctx) {\n  let div;\n  let h20;\n  let t0_value = ctx[0].cheatsheet + \"\";\n  let t0;\n  let ul0;\n  let h21;\n  let t1_value = ctx[0].shortcuts + \"\";\n  let t1;\n  let ul1;\n  let each_value_1 = ctx[2];\n  let each_blocks_1 = [];\n\n  for (let i = 0; i < each_value_1.length; i += 1) {\n    each_blocks_1[i] = create_each_block_1$1(get_each_context_1$1(ctx, each_value_1, i));\n  }\n\n  let each_value = ctx[2];\n  let each_blocks = [];\n\n  for (let i = 0; i < each_value.length; i += 1) {\n    each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));\n  }\n\n  return {\n    c() {\n      div = element(\"div\");\n      h20 = element(\"h2\");\n      t0 = text(t0_value);\n      ul0 = element(\"ul\");\n\n      for (let i = 0; i < each_blocks_1.length; i += 1) {\n        each_blocks_1[i].c();\n      }\n\n      h21 = element(\"h2\");\n      t1 = text(t1_value);\n      ul1 = element(\"ul\");\n\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].c();\n      }\n\n      attr(div, \"class\", \"bytemd-help\");\n      toggle_class(div, \"bytemd-hidden\", !ctx[1]);\n    },\n\n    m(target, anchor) {\n      insert(target, div, anchor);\n      append(div, h20);\n      append(h20, t0);\n      append(div, ul0);\n\n      for (let i = 0; i < each_blocks_1.length; i += 1) {\n        each_blocks_1[i].m(ul0, null);\n      }\n\n      append(div, h21);\n      append(h21, t1);\n      append(div, ul1);\n\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].m(ul1, null);\n      }\n    },\n\n    p(ctx2, [dirty]) {\n      if (dirty & 1 && t0_value !== (t0_value = ctx2[0].cheatsheet + \"\")) set_data(t0, t0_value);\n\n      if (dirty & 4) {\n        each_value_1 = ctx2[2];\n        let i;\n\n        for (i = 0; i < each_value_1.length; i += 1) {\n          const child_ctx = get_each_context_1$1(ctx2, each_value_1, i);\n\n          if (each_blocks_1[i]) {\n            each_blocks_1[i].p(child_ctx, dirty);\n          } else {\n            each_blocks_1[i] = create_each_block_1$1(child_ctx);\n            each_blocks_1[i].c();\n            each_blocks_1[i].m(ul0, null);\n          }\n        }\n\n        for (; i < each_blocks_1.length; i += 1) {\n          each_blocks_1[i].d(1);\n        }\n\n        each_blocks_1.length = each_value_1.length;\n      }\n\n      if (dirty & 1 && t1_value !== (t1_value = ctx2[0].shortcuts + \"\")) set_data(t1, t1_value);\n\n      if (dirty & 4) {\n        each_value = ctx2[2];\n        let i;\n\n        for (i = 0; i < each_value.length; i += 1) {\n          const child_ctx = get_each_context$2(ctx2, each_value, i);\n\n          if (each_blocks[i]) {\n            each_blocks[i].p(child_ctx, dirty);\n          } else {\n            each_blocks[i] = create_each_block$2(child_ctx);\n            each_blocks[i].c();\n            each_blocks[i].m(ul1, null);\n          }\n        }\n\n        for (; i < each_blocks.length; i += 1) {\n          each_blocks[i].d(1);\n        }\n\n        each_blocks.length = each_value.length;\n      }\n\n      if (dirty & 2) {\n        toggle_class(div, \"bytemd-hidden\", !ctx2[1]);\n      }\n    },\n\n    i: noop,\n    o: noop,\n\n    d(detaching) {\n      if (detaching) detach(div);\n      destroy_each(each_blocks_1, detaching);\n      destroy_each(each_blocks, detaching);\n    }\n\n  };\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n  let items;\n  let {\n    actions\n  } = $$props;\n  let {\n    locale\n  } = $$props;\n  let {\n    visible\n  } = $$props;\n\n  function flatItems(actions2) {\n    let items2 = [];\n    actions2.forEach(action => {\n      const {\n        handler,\n        cheatsheet: cheatsheet2\n      } = action;\n\n      if ((handler == null ? void 0 : handler.type) === \"dropdown\") {\n        items2.push(...flatItems(handler.actions));\n      }\n\n      if (cheatsheet2) {\n        items2.push(action);\n      }\n    });\n    return items2;\n  }\n\n  $$self.$$set = $$props2 => {\n    if (\"actions\" in $$props2) $$invalidate(3, actions = $$props2.actions);\n    if (\"locale\" in $$props2) $$invalidate(0, locale = $$props2.locale);\n    if (\"visible\" in $$props2) $$invalidate(1, visible = $$props2.visible);\n  };\n\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & 8) {\n      $$invalidate(2, items = flatItems(actions));\n    }\n  };\n\n  return [locale, visible, items, actions];\n}\n\nclass Help extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$5, create_fragment$5, safe_not_equal, {\n      actions: 3,\n      locale: 0,\n      visible: 1\n    });\n  }\n\n}\n\nfunction create_if_block_1$1(ctx) {\n  let span;\n  let t_value = ctx[2].limited + \"\";\n  let t;\n  return {\n    c() {\n      span = element(\"span\");\n      t = text(t_value);\n      attr(span, \"class\", \"bytemd-status-error\");\n    },\n\n    m(target, anchor) {\n      insert(target, span, anchor);\n      append(span, t);\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 4 && t_value !== (t_value = ctx2[2].limited + \"\")) set_data(t, t_value);\n    },\n\n    d(detaching) {\n      if (detaching) detach(span);\n    }\n\n  };\n}\n\nfunction create_if_block$2(ctx) {\n  let label;\n  let input;\n  let t_value = ctx[2].sync + \"\";\n  let t;\n  let mounted;\n  let dispose;\n  return {\n    c() {\n      label = element(\"label\");\n      input = element(\"input\");\n      t = text(t_value);\n      attr(input, \"type\", \"checkbox\");\n      input.checked = ctx[1];\n    },\n\n    m(target, anchor) {\n      insert(target, label, anchor);\n      append(label, input);\n      append(label, t);\n\n      if (!mounted) {\n        dispose = listen(input, \"change\", ctx[8]);\n        mounted = true;\n      }\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 2) {\n        input.checked = ctx2[1];\n      }\n\n      if (dirty & 4 && t_value !== (t_value = ctx2[2].sync + \"\")) set_data(t, t_value);\n    },\n\n    d(detaching) {\n      if (detaching) detach(label);\n      mounted = false;\n      dispose();\n    }\n\n  };\n}\n\nfunction create_fragment$4(ctx) {\n  let div2;\n  let div0;\n  let span0;\n  let t0_value = ctx[2].words + \"\";\n  let t0;\n  let t1;\n  let strong0;\n  let t2;\n  let span1;\n  let t3_value = ctx[2].lines + \"\";\n  let t3;\n  let t4;\n  let strong1;\n  let t5;\n  let div1;\n  let span2;\n  let t6_value = ctx[2].top + \"\";\n  let t6;\n  let mounted;\n  let dispose;\n  let if_block0 = ctx[3] && create_if_block_1$1(ctx);\n  let if_block1 = ctx[0] && create_if_block$2(ctx);\n  return {\n    c() {\n      div2 = element(\"div\");\n      div0 = element(\"div\");\n      span0 = element(\"span\");\n      t0 = text(t0_value);\n      t1 = text(\": \");\n      strong0 = element(\"strong\");\n      t2 = text(ctx[5]);\n      span1 = element(\"span\");\n      t3 = text(t3_value);\n      t4 = text(\": \");\n      strong1 = element(\"strong\");\n      t5 = text(ctx[4]);\n      if (if_block0) if_block0.c();\n      div1 = element(\"div\");\n      if (if_block1) if_block1.c();\n      span2 = element(\"span\");\n      t6 = text(t6_value);\n      attr(div0, \"class\", \"bytemd-status-left\");\n      attr(div1, \"class\", \"bytemd-status-right\");\n      attr(div2, \"class\", \"bytemd-status\");\n    },\n\n    m(target, anchor) {\n      insert(target, div2, anchor);\n      append(div2, div0);\n      append(div0, span0);\n      append(span0, t0);\n      append(span0, t1);\n      append(span0, strong0);\n      append(strong0, t2);\n      append(div0, span1);\n      append(span1, t3);\n      append(span1, t4);\n      append(span1, strong1);\n      append(strong1, t5);\n      if (if_block0) if_block0.m(div0, null);\n      append(div2, div1);\n      if (if_block1) if_block1.m(div1, null);\n      append(div1, span2);\n      append(span2, t6);\n\n      if (!mounted) {\n        dispose = [listen(span2, \"click\", ctx[9]), listen(span2, \"keydown\", self(ctx[10]))];\n        mounted = true;\n      }\n    },\n\n    p(ctx2, [dirty]) {\n      if (dirty & 4 && t0_value !== (t0_value = ctx2[2].words + \"\")) set_data(t0, t0_value);\n      if (dirty & 32) set_data(t2, ctx2[5]);\n      if (dirty & 4 && t3_value !== (t3_value = ctx2[2].lines + \"\")) set_data(t3, t3_value);\n      if (dirty & 16) set_data(t5, ctx2[4]);\n\n      if (ctx2[3]) {\n        if (if_block0) {\n          if_block0.p(ctx2, dirty);\n        } else {\n          if_block0 = create_if_block_1$1(ctx2);\n          if_block0.c();\n          if_block0.m(div0, null);\n        }\n      } else if (if_block0) {\n        if_block0.d(1);\n        if_block0 = null;\n      }\n\n      if (ctx2[0]) {\n        if (if_block1) {\n          if_block1.p(ctx2, dirty);\n        } else {\n          if_block1 = create_if_block$2(ctx2);\n          if_block1.c();\n          if_block1.m(div1, span2);\n        }\n      } else if (if_block1) {\n        if_block1.d(1);\n        if_block1 = null;\n      }\n\n      if (dirty & 4 && t6_value !== (t6_value = ctx2[2].top + \"\")) set_data(t6, t6_value);\n    },\n\n    i: noop,\n    o: noop,\n\n    d(detaching) {\n      if (detaching) detach(div2);\n      if (if_block0) if_block0.d();\n      if (if_block1) if_block1.d();\n      mounted = false;\n      run_all(dispose);\n    }\n\n  };\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n  let words2;\n  let lines2;\n  let {\n    showSync\n  } = $$props;\n  let {\n    value\n  } = $$props;\n  let {\n    syncEnabled\n  } = $$props;\n  let {\n    locale\n  } = $$props;\n  let {\n    islimited\n  } = $$props;\n  const dispatch = createEventDispatcher();\n\n  const change_handler = () => dispatch(\"sync\", !syncEnabled);\n\n  const click_handler = () => dispatch(\"top\");\n\n  const keydown_handler = e => [\"Enter\", \"Space\"].includes(e.code) && dispatch(\"top\");\n\n  $$self.$$set = $$props2 => {\n    if (\"showSync\" in $$props2) $$invalidate(0, showSync = $$props2.showSync);\n    if (\"value\" in $$props2) $$invalidate(7, value = $$props2.value);\n    if (\"syncEnabled\" in $$props2) $$invalidate(1, syncEnabled = $$props2.syncEnabled);\n    if (\"locale\" in $$props2) $$invalidate(2, locale = $$props2.locale);\n    if (\"islimited\" in $$props2) $$invalidate(3, islimited = $$props2.islimited);\n  };\n\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & 128) {\n      $$invalidate(5, words2 = word_count__WEBPACK_IMPORTED_MODULE_13__(value));\n    }\n\n    if ($$self.$$.dirty & 128) {\n      $$invalidate(4, lines2 = value.split(\"\\n\").length);\n    }\n  };\n\n  return [showSync, syncEnabled, locale, islimited, lines2, words2, dispatch, value, change_handler, click_handler, keydown_handler];\n}\n\nclass Status extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$4, create_fragment$4, safe_not_equal, {\n      showSync: 0,\n      value: 7,\n      syncEnabled: 1,\n      locale: 2,\n      islimited: 3\n    });\n  }\n\n}\n\nfunction get_each_context$1(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[11] = list[i];\n  child_ctx[13] = i;\n  return child_ctx;\n}\n\nfunction create_each_block$1(ctx) {\n  let li;\n  let t_value = ctx[11].text + \"\";\n  let t;\n  let li_class_value;\n  let li_style_value;\n  let mounted;\n  let dispose;\n\n  function click_handler() {\n    return ctx[8](ctx[13]);\n  }\n\n  function keydown_handler(...args) {\n    return ctx[9](ctx[13], ...args);\n  }\n\n  return {\n    c() {\n      li = element(\"li\");\n      t = text(t_value);\n      attr(li, \"class\", li_class_value = `bytemd-toc-${ctx[11].level}`);\n      attr(li, \"style\", li_style_value = `padding-left:${(ctx[11].level - ctx[3]) * 16 + 8}px`);\n      toggle_class(li, \"bytemd-toc-active\", ctx[4] === ctx[13]);\n      toggle_class(li, \"bytemd-toc-first\", ctx[11].level === ctx[3]);\n    },\n\n    m(target, anchor) {\n      insert(target, li, anchor);\n      append(li, t);\n\n      if (!mounted) {\n        dispose = [listen(li, \"click\", click_handler), listen(li, \"keydown\", self(keydown_handler))];\n        mounted = true;\n      }\n    },\n\n    p(new_ctx, dirty) {\n      ctx = new_ctx;\n      if (dirty & 4 && t_value !== (t_value = ctx[11].text + \"\")) set_data(t, t_value);\n\n      if (dirty & 4 && li_class_value !== (li_class_value = `bytemd-toc-${ctx[11].level}`)) {\n        attr(li, \"class\", li_class_value);\n      }\n\n      if (dirty & 12 && li_style_value !== (li_style_value = `padding-left:${(ctx[11].level - ctx[3]) * 16 + 8}px`)) {\n        attr(li, \"style\", li_style_value);\n      }\n\n      if (dirty & 20) {\n        toggle_class(li, \"bytemd-toc-active\", ctx[4] === ctx[13]);\n      }\n\n      if (dirty & 12) {\n        toggle_class(li, \"bytemd-toc-first\", ctx[11].level === ctx[3]);\n      }\n    },\n\n    d(detaching) {\n      if (detaching) detach(li);\n      mounted = false;\n      run_all(dispose);\n    }\n\n  };\n}\n\nfunction create_fragment$3(ctx) {\n  let div;\n  let h22;\n  let t_value = ctx[0].toc + \"\";\n  let t;\n  let ul2;\n  let each_value = ctx[2];\n  let each_blocks = [];\n\n  for (let i = 0; i < each_value.length; i += 1) {\n    each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));\n  }\n\n  return {\n    c() {\n      div = element(\"div\");\n      h22 = element(\"h2\");\n      t = text(t_value);\n      ul2 = element(\"ul\");\n\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].c();\n      }\n\n      attr(div, \"class\", \"bytemd-toc\");\n      toggle_class(div, \"bytemd-hidden\", !ctx[1]);\n    },\n\n    m(target, anchor) {\n      insert(target, div, anchor);\n      append(div, h22);\n      append(h22, t);\n      append(div, ul2);\n\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].m(ul2, null);\n      }\n    },\n\n    p(ctx2, [dirty]) {\n      if (dirty & 1 && t_value !== (t_value = ctx2[0].toc + \"\")) set_data(t, t_value);\n\n      if (dirty & 60) {\n        each_value = ctx2[2];\n        let i;\n\n        for (i = 0; i < each_value.length; i += 1) {\n          const child_ctx = get_each_context$1(ctx2, each_value, i);\n\n          if (each_blocks[i]) {\n            each_blocks[i].p(child_ctx, dirty);\n          } else {\n            each_blocks[i] = create_each_block$1(child_ctx);\n            each_blocks[i].c();\n            each_blocks[i].m(ul2, null);\n          }\n        }\n\n        for (; i < each_blocks.length; i += 1) {\n          each_blocks[i].d(1);\n        }\n\n        each_blocks.length = each_value.length;\n      }\n\n      if (dirty & 2) {\n        toggle_class(div, \"bytemd-hidden\", !ctx2[1]);\n      }\n    },\n\n    i: noop,\n    o: noop,\n\n    d(detaching) {\n      if (detaching) detach(div);\n      destroy_each(each_blocks, detaching);\n    }\n\n  };\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n  let {\n    hast\n  } = $$props;\n  let {\n    currentBlockIndex\n  } = $$props;\n  let {\n    locale\n  } = $$props;\n  let {\n    visible\n  } = $$props;\n  const dispatch = createEventDispatcher();\n  let items;\n  let minLevel = 6;\n  let currentHeadingIndex = 0;\n\n  function stringifyHeading(e) {\n    let result = \"\";\n    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_14__.visit)(e, node => {\n      if (node.type === \"text\") {\n        result += node.value;\n      }\n    });\n    return result;\n  }\n\n  const click_handler = index2 => {\n    dispatch(\"click\", index2);\n  };\n\n  const keydown_handler = (index2, e) => {\n    if ([\"Enter\", \"Space\"].includes(e.code)) {\n      dispatch(\"click\", index2);\n    }\n  };\n\n  $$self.$$set = $$props2 => {\n    if (\"hast\" in $$props2) $$invalidate(6, hast = $$props2.hast);\n    if (\"currentBlockIndex\" in $$props2) $$invalidate(7, currentBlockIndex = $$props2.currentBlockIndex);\n    if (\"locale\" in $$props2) $$invalidate(0, locale = $$props2.locale);\n    if (\"visible\" in $$props2) $$invalidate(1, visible = $$props2.visible);\n  };\n\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & 204) {\n      (() => {\n        $$invalidate(2, items = []);\n        $$invalidate(4, currentHeadingIndex = 0);\n        hast.children.filter(v => v.type === \"element\").forEach((node, index2) => {\n          if (node.tagName[0] === \"h\" && !!node.children.length) {\n            const i = Number(node.tagName[1]);\n            $$invalidate(3, minLevel = Math.min(minLevel, i));\n            items.push({\n              level: i,\n              text: stringifyHeading(node)\n            });\n          }\n\n          if (currentBlockIndex >= index2) {\n            $$invalidate(4, currentHeadingIndex = items.length - 1);\n          }\n        });\n      })();\n    }\n  };\n\n  return [locale, visible, items, minLevel, currentHeadingIndex, dispatch, hast, currentBlockIndex, click_handler, keydown_handler];\n}\n\nclass Toc extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$3, create_fragment$3, not_equal, {\n      hast: 6,\n      currentBlockIndex: 7,\n      locale: 0,\n      visible: 1\n    });\n  }\n\n}\n\nfunction get_each_context(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[25] = list[i];\n  child_ctx[27] = i;\n  return child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[25] = list[i];\n  child_ctx[27] = i;\n  return child_ctx;\n}\n\nfunction create_else_block(ctx) {\n  let div0;\n  let t0_value = ctx[2].write + \"\";\n  let t0;\n  let div1;\n  let t1_value = ctx[2].preview + \"\";\n  let t1;\n  let mounted;\n  let dispose;\n  return {\n    c() {\n      div0 = element(\"div\");\n      t0 = text(t0_value);\n      div1 = element(\"div\");\n      t1 = text(t1_value);\n      attr(div0, \"class\", \"bytemd-toolbar-tab\");\n      toggle_class(div0, \"bytemd-toolbar-tab-active\", ctx[1] !== \"preview\");\n      attr(div1, \"class\", \"bytemd-toolbar-tab\");\n      toggle_class(div1, \"bytemd-toolbar-tab-active\", ctx[1] === \"preview\");\n    },\n\n    m(target, anchor) {\n      insert(target, div0, anchor);\n      append(div0, t0);\n      insert(target, div1, anchor);\n      append(div1, t1);\n\n      if (!mounted) {\n        dispose = [listen(div0, \"click\", ctx[16]), listen(div0, \"keydown\", self(ctx[17])), listen(div1, \"click\", ctx[18]), listen(div1, \"keydown\", self(ctx[19]))];\n        mounted = true;\n      }\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 4 && t0_value !== (t0_value = ctx2[2].write + \"\")) set_data(t0, t0_value);\n\n      if (dirty & 2) {\n        toggle_class(div0, \"bytemd-toolbar-tab-active\", ctx2[1] !== \"preview\");\n      }\n\n      if (dirty & 4 && t1_value !== (t1_value = ctx2[2].preview + \"\")) set_data(t1, t1_value);\n\n      if (dirty & 2) {\n        toggle_class(div1, \"bytemd-toolbar-tab-active\", ctx2[1] === \"preview\");\n      }\n    },\n\n    d(detaching) {\n      if (detaching) detach(div0);\n      if (detaching) detach(div1);\n      mounted = false;\n      run_all(dispose);\n    }\n\n  };\n}\n\nfunction create_if_block_1(ctx) {\n  let each_1_anchor;\n  let each_value_1 = ctx[3];\n  let each_blocks = [];\n\n  for (let i = 0; i < each_value_1.length; i += 1) {\n    each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));\n  }\n\n  return {\n    c() {\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].c();\n      }\n\n      each_1_anchor = empty();\n    },\n\n    m(target, anchor) {\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].m(target, anchor);\n      }\n\n      insert(target, each_1_anchor, anchor);\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 8) {\n        each_value_1 = ctx2[3];\n        let i;\n\n        for (i = 0; i < each_value_1.length; i += 1) {\n          const child_ctx = get_each_context_1(ctx2, each_value_1, i);\n\n          if (each_blocks[i]) {\n            each_blocks[i].p(child_ctx, dirty);\n          } else {\n            each_blocks[i] = create_each_block_1(child_ctx);\n            each_blocks[i].c();\n            each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n          }\n        }\n\n        for (; i < each_blocks.length; i += 1) {\n          each_blocks[i].d(1);\n        }\n\n        each_blocks.length = each_value_1.length;\n      }\n    },\n\n    d(detaching) {\n      destroy_each(each_blocks, detaching);\n      if (detaching) detach(each_1_anchor);\n    }\n\n  };\n}\n\nfunction create_if_block_2(ctx) {\n  let div;\n  let raw_value = ctx[25].icon + \"\";\n  return {\n    c() {\n      div = element(\"div\");\n      attr(div, \"class\", [\"bytemd-toolbar-icon\", tippyClass].join(\" \"));\n      attr(div, \"bytemd-tippy-path\", ctx[27]);\n    },\n\n    m(target, anchor) {\n      insert(target, div, anchor);\n      div.innerHTML = raw_value;\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 8 && raw_value !== (raw_value = ctx2[25].icon + \"\")) div.innerHTML = raw_value;\n    },\n\n    d(detaching) {\n      if (detaching) detach(div);\n    }\n\n  };\n}\n\nfunction create_each_block_1(ctx) {\n  let if_block_anchor;\n  let if_block = ctx[25].handler && create_if_block_2(ctx);\n  return {\n    c() {\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n    },\n\n    m(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n    },\n\n    p(ctx2, dirty) {\n      if (ctx2[25].handler) {\n        if (if_block) {\n          if_block.p(ctx2, dirty);\n        } else {\n          if_block = create_if_block_2(ctx2);\n          if_block.c();\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n    },\n\n    d(detaching) {\n      if (if_block) if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n\n  };\n}\n\nfunction create_if_block$1(ctx) {\n  let div;\n  let raw_value = ctx[25].icon + \"\";\n  return {\n    c() {\n      div = element(\"div\");\n      attr(div, \"class\", [\"bytemd-toolbar-icon\", tippyClass, tippyClassRight].join(\" \"));\n      attr(div, \"bytemd-tippy-path\", ctx[27]);\n      toggle_class(div, \"bytemd-toolbar-icon-active\", ctx[25].active);\n    },\n\n    m(target, anchor) {\n      insert(target, div, anchor);\n      div.innerHTML = raw_value;\n    },\n\n    p(ctx2, dirty) {\n      if (dirty & 32 && raw_value !== (raw_value = ctx2[25].icon + \"\")) div.innerHTML = raw_value;\n\n      if (dirty & 32) {\n        toggle_class(div, \"bytemd-toolbar-icon-active\", ctx2[25].active);\n      }\n    },\n\n    d(detaching) {\n      if (detaching) detach(div);\n    }\n\n  };\n}\n\nfunction create_each_block(ctx) {\n  let if_block_anchor;\n  let if_block = !ctx[25].hidden && create_if_block$1(ctx);\n  return {\n    c() {\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n    },\n\n    m(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n    },\n\n    p(ctx2, dirty) {\n      if (!ctx2[25].hidden) {\n        if (if_block) {\n          if_block.p(ctx2, dirty);\n        } else {\n          if_block = create_if_block$1(ctx2);\n          if_block.c();\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n    },\n\n    d(detaching) {\n      if (if_block) if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n\n  };\n}\n\nfunction create_fragment$2(ctx) {\n  let div2;\n  let div0;\n  let div1;\n  let mounted;\n  let dispose;\n\n  function select_block_type(ctx2, dirty) {\n    if (ctx2[0]) return create_if_block_1;\n    return create_else_block;\n  }\n\n  let current_block_type = select_block_type(ctx);\n  let if_block = current_block_type(ctx);\n  let each_value = ctx[5];\n  let each_blocks = [];\n\n  for (let i = 0; i < each_value.length; i += 1) {\n    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n  }\n\n  return {\n    c() {\n      div2 = element(\"div\");\n      div0 = element(\"div\");\n      if_block.c();\n      div1 = element(\"div\");\n\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].c();\n      }\n\n      attr(div0, \"class\", \"bytemd-toolbar-left\");\n      attr(div1, \"class\", \"bytemd-toolbar-right\");\n      attr(div2, \"class\", \"bytemd-toolbar\");\n    },\n\n    m(target, anchor) {\n      insert(target, div2, anchor);\n      append(div2, div0);\n      if_block.m(div0, null);\n      append(div2, div1);\n\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].m(div1, null);\n      }\n\n      ctx[20](div2);\n\n      if (!mounted) {\n        dispose = [listen(div2, \"click\", ctx[7]), listen(div2, \"keydown\", self(ctx[21]))];\n        mounted = true;\n      }\n    },\n\n    p(ctx2, [dirty]) {\n      if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block) {\n        if_block.p(ctx2, dirty);\n      } else {\n        if_block.d(1);\n        if_block = current_block_type(ctx2);\n\n        if (if_block) {\n          if_block.c();\n          if_block.m(div0, null);\n        }\n      }\n\n      if (dirty & 32) {\n        each_value = ctx2[5];\n        let i;\n\n        for (i = 0; i < each_value.length; i += 1) {\n          const child_ctx = get_each_context(ctx2, each_value, i);\n\n          if (each_blocks[i]) {\n            each_blocks[i].p(child_ctx, dirty);\n          } else {\n            each_blocks[i] = create_each_block(child_ctx);\n            each_blocks[i].c();\n            each_blocks[i].m(div1, null);\n          }\n        }\n\n        for (; i < each_blocks.length; i += 1) {\n          each_blocks[i].d(1);\n        }\n\n        each_blocks.length = each_value.length;\n      }\n    },\n\n    i: noop,\n    o: noop,\n\n    d(detaching) {\n      if (detaching) detach(div2);\n      if_block.d();\n      destroy_each(each_blocks, detaching);\n      ctx[20](null);\n      mounted = false;\n      run_all(dispose);\n    }\n\n  };\n}\n\nconst tippyClass = \"bytemd-tippy\";\nconst tippyClassRight = \"bytemd-tippy-right\";\nconst tippyPathKey = \"bytemd-tippy-path\";\n\nfunction instance$2($$self, $$props, $$invalidate) {\n  let tocActive;\n  let helpActive;\n  let writeActive;\n  let previewActive;\n  let rightActions;\n  const dispatch = createEventDispatcher();\n  let toolbar;\n  let {\n    context\n  } = $$props;\n  let {\n    split\n  } = $$props;\n  let {\n    activeTab\n  } = $$props;\n  let {\n    fullscreen: fullscreen2\n  } = $$props;\n  let {\n    sidebar\n  } = $$props;\n  let {\n    locale\n  } = $$props;\n  let {\n    actions\n  } = $$props;\n  let {\n    rightAfferentActions\n  } = $$props;\n\n  function getPayloadFromElement(e) {\n    var _a, _b;\n\n    const paths = (_b = (_a = e.getAttribute(tippyPathKey)) == null ? void 0 : _a.split(\"-\")) == null ? void 0 : _b.map(x => parseInt(x, 10));\n    if (!paths) return;\n    let item = {\n      title: \"\",\n      handler: {\n        type: \"dropdown\",\n        actions: e.classList.contains(tippyClassRight) ? rightActions : actions\n      }\n    };\n    paths == null ? void 0 : paths.forEach(index2 => {\n      var _a2;\n\n      if (((_a2 = item.handler) == null ? void 0 : _a2.type) === \"dropdown\") {\n        item = item.handler.actions[index2];\n      }\n    });\n    return {\n      paths,\n      item\n    };\n  }\n\n  let delegateInstance;\n\n  function init2() {\n    delegateInstance = (0,tippy_js__WEBPACK_IMPORTED_MODULE_15__.delegate)(toolbar, {\n      target: `.${tippyClass}`,\n\n      onCreate({\n        setProps,\n        reference\n      }) {\n        const payload = getPayloadFromElement(reference);\n        if (!payload) return;\n        const {\n          item,\n          paths\n        } = payload;\n        const {\n          handler\n        } = item;\n        if (!handler) return;\n\n        if (handler.type === \"action\") {\n          setProps({\n            content: item.title,\n\n            onHidden(ins) {\n              ins.destroy();\n            }\n\n          });\n        } else if (handler.type === \"dropdown\") {\n          const dropdown = document.createElement(\"div\");\n          dropdown.classList.add(\"bytemd-dropdown\");\n\n          if (item.title) {\n            const dropdownTitle = document.createElement(\"div\");\n            dropdownTitle.classList.add(\"bytemd-dropdown-title\");\n            dropdownTitle.appendChild(document.createTextNode(item.title));\n            dropdown.appendChild(dropdownTitle);\n          }\n\n          handler.actions.forEach((subAction, i) => {\n            var _a;\n\n            const dropdownItem = document.createElement(\"div\");\n            dropdownItem.classList.add(\"bytemd-dropdown-item\");\n            dropdownItem.setAttribute(tippyPathKey, [...paths, i].join(\"-\"));\n\n            if (((_a = subAction.handler) == null ? void 0 : _a.type) === \"dropdown\") {\n              dropdownItem.classList.add(tippyClass);\n            }\n\n            if (reference.classList.contains(tippyClassRight)) {\n              dropdownItem.classList.add(tippyClassRight);\n            }\n\n            dropdownItem.innerHTML = `${subAction.icon ? `<div class=\"bytemd-dropdown-item-icon\">${subAction.icon}</div>` : \"\"}<div class=\"bytemd-dropdown-item-title\">${subAction.title}</div>`;\n            dropdown.appendChild(dropdownItem);\n          });\n          setProps({\n            allowHTML: true,\n            showOnCreate: true,\n            theme: \"light-border\",\n            placement: \"bottom-start\",\n            interactive: true,\n            interactiveDebounce: 50,\n            arrow: false,\n            offset: [0, 4],\n            content: dropdown.outerHTML,\n\n            onHidden(ins) {\n              ins.destroy();\n            },\n\n            onCreate(ins) {\n              [...ins.popper.querySelectorAll(\".bytemd-dropdown-item\")].forEach((el, i) => {\n                var _a;\n\n                const actionHandler = (_a = handler.actions[i]) == null ? void 0 : _a.handler;\n\n                if ((actionHandler == null ? void 0 : actionHandler.type) === \"action\") {\n                  const {\n                    mouseenter,\n                    mouseleave\n                  } = actionHandler;\n\n                  if (mouseenter) {\n                    el.addEventListener(\"mouseenter\", () => {\n                      mouseenter(context);\n                    });\n                  }\n\n                  if (mouseleave) {\n                    el.addEventListener(\"mouseleave\", () => {\n                      mouseleave(context);\n                    });\n                  }\n                }\n              });\n            }\n\n          });\n        }\n      }\n\n    });\n  }\n\n  onMount(() => {\n    init2();\n  });\n\n  function handleClick(e) {\n    var _a, _b;\n\n    const target = e.target.closest(`[${tippyPathKey}]`);\n    if (!target) return;\n    const handler = (_b = (_a = getPayloadFromElement(target)) == null ? void 0 : _a.item) == null ? void 0 : _b.handler;\n\n    if ((handler == null ? void 0 : handler.type) === \"action\") {\n      handler.click(context);\n    }\n\n    delegateInstance == null ? void 0 : delegateInstance.destroy();\n    init2();\n  }\n\n  const click_handler = () => dispatch(\"tab\", \"write\");\n\n  const keydown_handler = e => [\"Enter\", \"Space\"].includes(e.code) && dispatch(\"tab\", \"write\");\n\n  const click_handler_1 = () => dispatch(\"tab\", \"preview\");\n\n  const keydown_handler_1 = e => [\"Enter\", \"Space\"].includes(e.code) && dispatch(\"tab\", \"preview\");\n\n  function div2_binding($$value) {\n    binding_callbacks[$$value ? \"unshift\" : \"push\"](() => {\n      toolbar = $$value;\n      $$invalidate(4, toolbar);\n    });\n  }\n\n  const keydown_handler_2 = e => [\"Enter\", \"Space\"].includes(e.code) && handleClick(e);\n\n  $$self.$$set = $$props2 => {\n    if (\"context\" in $$props2) $$invalidate(8, context = $$props2.context);\n    if (\"split\" in $$props2) $$invalidate(0, split = $$props2.split);\n    if (\"activeTab\" in $$props2) $$invalidate(1, activeTab = $$props2.activeTab);\n    if (\"fullscreen\" in $$props2) $$invalidate(9, fullscreen2 = $$props2.fullscreen);\n    if (\"sidebar\" in $$props2) $$invalidate(10, sidebar = $$props2.sidebar);\n    if (\"locale\" in $$props2) $$invalidate(2, locale = $$props2.locale);\n    if (\"actions\" in $$props2) $$invalidate(3, actions = $$props2.actions);\n    if (\"rightAfferentActions\" in $$props2) $$invalidate(11, rightAfferentActions = $$props2.rightAfferentActions);\n  };\n\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & 1024) {\n      $$invalidate(15, tocActive = sidebar === \"toc\");\n    }\n\n    if ($$self.$$.dirty & 1024) {\n      $$invalidate(14, helpActive = sidebar === \"help\");\n    }\n\n    if ($$self.$$.dirty & 2) {\n      $$invalidate(13, writeActive = activeTab === \"write\");\n    }\n\n    if ($$self.$$.dirty & 2) {\n      $$invalidate(12, previewActive = activeTab === \"preview\");\n    }\n\n    if ($$self.$$.dirty & 64005) {\n      $$invalidate(5, rightActions = [{\n        title: tocActive ? locale.closeToc : locale.toc,\n        icon: icons.AlignTextLeftOne,\n        handler: {\n          type: \"action\",\n\n          click() {\n            dispatch(\"click\", \"toc\");\n          }\n\n        },\n        active: tocActive\n      }, {\n        title: helpActive ? locale.closeHelp : locale.help,\n        icon: icons.Helpcenter,\n        handler: {\n          type: \"action\",\n\n          click() {\n            dispatch(\"click\", \"help\");\n          }\n\n        },\n        active: helpActive\n      }, {\n        title: writeActive ? locale.exitWriteOnly : locale.writeOnly,\n        icon: icons.LeftExpand,\n        handler: {\n          type: \"action\",\n\n          click() {\n            dispatch(\"tab\", \"write\");\n          }\n\n        },\n        active: writeActive,\n        hidden: !split\n      }, {\n        title: previewActive ? locale.exitPreviewOnly : locale.previewOnly,\n        icon: icons.RightExpand,\n        handler: {\n          type: \"action\",\n\n          click() {\n            dispatch(\"tab\", \"preview\");\n          }\n\n        },\n        active: previewActive,\n        hidden: !split\n      }, {\n        title: fullscreen2 ? locale.exitFullscreen : locale.fullscreen,\n        icon: fullscreen2 ? icons.OffScreen : icons.FullScreen,\n        handler: {\n          type: \"action\",\n\n          click() {\n            dispatch(\"click\", \"fullscreen\");\n          }\n\n        }\n      }, {\n        title: locale.source,\n        icon: icons.GithubOne,\n        handler: {\n          type: \"action\",\n\n          click() {\n            window.open(\"https://github.com/bytedance/bytemd\");\n          }\n\n        }\n      }, ...rightAfferentActions]);\n    }\n  };\n\n  return [split, activeTab, locale, actions, toolbar, rightActions, dispatch, handleClick, context, fullscreen2, sidebar, rightAfferentActions, previewActive, writeActive, helpActive, tocActive, click_handler, keydown_handler, click_handler_1, keydown_handler_1, div2_binding, keydown_handler_2];\n}\n\nclass Toolbar extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$2, create_fragment$2, not_equal, {\n      context: 8,\n      split: 0,\n      activeTab: 1,\n      fullscreen: 9,\n      sidebar: 10,\n      locale: 2,\n      actions: 3,\n      rightAfferentActions: 11\n    });\n  }\n\n}\n\nconst schemaStr = JSON.stringify(hast_util_sanitize__WEBPACK_IMPORTED_MODULE_16__.defaultSchema);\n\nfunction getProcessor({\n  sanitize,\n  plugins,\n  remarkRehype: remarkRehypeOptions = {}\n}) {\n  let processor = (0,unified__WEBPACK_IMPORTED_MODULE_17__.unified)().use(remark_parse__WEBPACK_IMPORTED_MODULE_18__[\"default\"]);\n  plugins == null ? void 0 : plugins.forEach(({\n    remark\n  }) => {\n    if (remark) processor = remark(processor);\n  });\n  processor = processor.use(remark_rehype__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n    allowDangerousHtml: true,\n    ...remarkRehypeOptions\n  }).use(rehype_raw__WEBPACK_IMPORTED_MODULE_20__[\"default\"]);\n  let schema = JSON.parse(schemaStr);\n  schema.attributes[\"*\"].push(\"className\");\n\n  if (typeof sanitize === \"function\") {\n    schema = sanitize(schema);\n  }\n\n  processor = processor.use(rehype_sanitize__WEBPACK_IMPORTED_MODULE_21__[\"default\"], schema);\n  plugins == null ? void 0 : plugins.forEach(({\n    rehype\n  }) => {\n    if (rehype) processor = rehype(processor);\n  });\n  return processor.use(rehype_stringify__WEBPACK_IMPORTED_MODULE_22__[\"default\"]);\n}\n\nfunction create_fragment$1(ctx) {\n  let div;\n  return {\n    c() {\n      div = element(\"div\");\n      attr(div, \"class\", \"markdown-body\");\n    },\n\n    m(target, anchor) {\n      insert(target, div, anchor);\n      div.innerHTML = ctx[1];\n      ctx[8](div);\n    },\n\n    p(ctx2, [dirty]) {\n      if (dirty & 2) div.innerHTML = ctx2[1];\n    },\n\n    i: noop,\n    o: noop,\n\n    d(detaching) {\n      if (detaching) detach(div);\n      ctx[8](null);\n    }\n\n  };\n}\n\nfunction instance$1($$self, $$props, $$invalidate) {\n  let html;\n  const dispatch = createEventDispatcher();\n  let {\n    value = \"\"\n  } = $$props;\n  let {\n    plugins = []\n  } = $$props;\n  let {\n    sanitize = void 0\n  } = $$props;\n  let {\n    remarkRehype: remarkRehype2 = void 0\n  } = $$props;\n  let markdownBody;\n  let cbs = [];\n\n  function on() {\n    cbs = plugins.map(p => {\n      var _a;\n\n      return (_a = p.viewerEffect) == null ? void 0 : _a.call(p, {\n        markdownBody,\n        file\n      });\n    });\n  }\n\n  function off() {\n    cbs.forEach(cb => cb == null ? void 0 : cb());\n  }\n\n  onMount(() => {\n    markdownBody.addEventListener(\"click\", e => {\n      var _a;\n\n      const $ = e.target;\n      if ($.tagName !== \"A\") return;\n      const href = $.getAttribute(\"href\");\n      if (!(href == null ? void 0 : href.startsWith(\"#\"))) return;\n      (_a = markdownBody.querySelector(\"#user-content-\" + href.slice(1))) == null ? void 0 : _a.scrollIntoView();\n    });\n  });\n  onDestroy(off);\n  let file;\n  let i = 0;\n\n  const dispatchPlugin = () => (tree, file2) => {\n    tick().then(() => {\n      dispatch(\"hast\", {\n        hast: tree,\n        file: file2\n      });\n    });\n  };\n\n  afterUpdate(() => {\n    off();\n    on();\n  });\n\n  function div_binding($$value) {\n    binding_callbacks[$$value ? \"unshift\" : \"push\"](() => {\n      markdownBody = $$value;\n      $$invalidate(0, markdownBody);\n    });\n  }\n\n  $$self.$$set = $$props2 => {\n    if (\"value\" in $$props2) $$invalidate(2, value = $$props2.value);\n    if (\"plugins\" in $$props2) $$invalidate(3, plugins = $$props2.plugins);\n    if (\"sanitize\" in $$props2) $$invalidate(4, sanitize = $$props2.sanitize);\n    if (\"remarkRehype\" in $$props2) $$invalidate(5, remarkRehype2 = $$props2.remarkRehype);\n  };\n\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & 188) {\n      try {\n        $$invalidate(6, file = getProcessor({\n          sanitize,\n          plugins: [...plugins, {\n            rehype: processor => processor.use(dispatchPlugin)\n          }],\n          remarkRehype: remarkRehype2\n        }).processSync(value));\n        $$invalidate(7, i++, i);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    if ($$self.$$.dirty & 192) {\n      $$invalidate(1, html = `${file}<!--${i}-->`);\n    }\n  };\n\n  return [markdownBody, html, value, plugins, sanitize, remarkRehype2, file, i, div_binding];\n}\n\nclass Viewer extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$1, create_fragment$1, not_equal, {\n      value: 2,\n      plugins: 3,\n      sanitize: 4,\n      remarkRehype: 5\n    });\n  }\n\n}\n\nfunction create_if_block(ctx) {\n  let viewer;\n  let current;\n  viewer = new Viewer({\n    props: {\n      value: ctx[16],\n      plugins: ctx[1],\n      sanitize: ctx[2],\n      remarkRehype: ctx[3]\n    }\n  });\n  viewer.$on(\"hast\", ctx[35]);\n  return {\n    c() {\n      create_component(viewer.$$.fragment);\n    },\n\n    m(target, anchor) {\n      mount_component(viewer, target, anchor);\n      current = true;\n    },\n\n    p(ctx2, dirty) {\n      const viewer_changes = {};\n      if (dirty[0] & 65536) viewer_changes.value = ctx2[16];\n      if (dirty[0] & 2) viewer_changes.plugins = ctx2[1];\n      if (dirty[0] & 4) viewer_changes.sanitize = ctx2[2];\n      if (dirty[0] & 8) viewer_changes.remarkRehype = ctx2[3];\n      viewer.$set(viewer_changes);\n    },\n\n    i(local) {\n      if (current) return;\n      transition_in(viewer.$$.fragment, local);\n      current = true;\n    },\n\n    o(local) {\n      transition_out(viewer.$$.fragment, local);\n      current = false;\n    },\n\n    d(detaching) {\n      destroy_component(viewer, detaching);\n    }\n\n  };\n}\n\nfunction create_fragment(ctx) {\n  let div5;\n  let toolbar;\n  let div4;\n  let div0;\n  let div0_style_value;\n  let div1;\n  let div1_style_value;\n  let div3;\n  let div2;\n  let raw_value = icons.Close + \"\";\n  let help2;\n  let toc2;\n  let status;\n  let current;\n  let mounted;\n  let dispose;\n  toolbar = new Toolbar({\n    props: {\n      context: ctx[10],\n      split: ctx[11],\n      activeTab: ctx[8],\n      sidebar: ctx[9],\n      fullscreen: ctx[15],\n      rightAfferentActions: ctx[21].rightActions,\n      locale: ctx[12],\n      actions: ctx[21].leftActions\n    }\n  });\n  toolbar.$on(\"key\", ctx[31]);\n  toolbar.$on(\"tab\", ctx[32]);\n  toolbar.$on(\"click\", ctx[33]);\n  let if_block = !ctx[4] && (ctx[11] || ctx[8] === \"preview\") && create_if_block(ctx);\n  help2 = new Help({\n    props: {\n      locale: ctx[12],\n      actions: ctx[21].leftActions,\n      visible: ctx[9] === \"help\"\n    }\n  });\n  toc2 = new Toc({\n    props: {\n      hast: ctx[18],\n      locale: ctx[12],\n      currentBlockIndex: ctx[20],\n      visible: ctx[9] === \"toc\"\n    }\n  });\n  toc2.$on(\"click\", ctx[39]);\n  status = new Status({\n    props: {\n      locale: ctx[12],\n      showSync: !ctx[4] && ctx[11],\n      value: ctx[16],\n      syncEnabled: ctx[17],\n      islimited: ctx[0].length > ctx[5]\n    }\n  });\n  status.$on(\"sync\", ctx[40]);\n  status.$on(\"top\", ctx[41]);\n  return {\n    c() {\n      div5 = element(\"div\");\n      create_component(toolbar.$$.fragment);\n      div4 = element(\"div\");\n      div0 = element(\"div\");\n      div1 = element(\"div\");\n      if (if_block) if_block.c();\n      div3 = element(\"div\");\n      div2 = element(\"div\");\n      create_component(help2.$$.fragment);\n      create_component(toc2.$$.fragment);\n      create_component(status.$$.fragment);\n      attr(div0, \"class\", \"bytemd-editor\");\n      attr(div0, \"style\", div0_style_value = ctx[22].edit);\n      attr(div1, \"class\", \"bytemd-preview\");\n      attr(div1, \"style\", div1_style_value = ctx[22].preview);\n      attr(div2, \"class\", \"bytemd-sidebar-close\");\n      attr(div3, \"class\", \"bytemd-sidebar\");\n      toggle_class(div3, \"bytemd-hidden\", ctx[9] === false);\n      attr(div4, \"class\", \"bytemd-body\");\n      attr(div5, \"class\", \"bytemd\");\n      toggle_class(div5, \"bytemd-split\", ctx[11] && ctx[8] === false);\n      toggle_class(div5, \"bytemd-fullscreen\", ctx[15]);\n    },\n\n    m(target, anchor) {\n      insert(target, div5, anchor);\n      mount_component(toolbar, div5, null);\n      append(div5, div4);\n      append(div4, div0);\n      ctx[34](div0);\n      append(div4, div1);\n      if (if_block) if_block.m(div1, null);\n      ctx[36](div1);\n      append(div4, div3);\n      append(div3, div2);\n      div2.innerHTML = raw_value;\n      mount_component(help2, div3, null);\n      mount_component(toc2, div3, null);\n      mount_component(status, div5, null);\n      ctx[42](div5);\n      current = true;\n\n      if (!mounted) {\n        dispose = [listen(div2, \"click\", ctx[37]), listen(div2, \"keydown\", self(ctx[38]))];\n        mounted = true;\n      }\n    },\n\n    p(ctx2, dirty) {\n      const toolbar_changes = {};\n      if (dirty[0] & 1024) toolbar_changes.context = ctx2[10];\n      if (dirty[0] & 2048) toolbar_changes.split = ctx2[11];\n      if (dirty[0] & 256) toolbar_changes.activeTab = ctx2[8];\n      if (dirty[0] & 512) toolbar_changes.sidebar = ctx2[9];\n      if (dirty[0] & 32768) toolbar_changes.fullscreen = ctx2[15];\n      if (dirty[0] & 2097152) toolbar_changes.rightAfferentActions = ctx2[21].rightActions;\n      if (dirty[0] & 4096) toolbar_changes.locale = ctx2[12];\n      if (dirty[0] & 2097152) toolbar_changes.actions = ctx2[21].leftActions;\n      toolbar.$set(toolbar_changes);\n\n      if (!current || dirty[0] & 4194304 && div0_style_value !== (div0_style_value = ctx2[22].edit)) {\n        attr(div0, \"style\", div0_style_value);\n      }\n\n      if (!ctx2[4] && (ctx2[11] || ctx2[8] === \"preview\")) {\n        if (if_block) {\n          if_block.p(ctx2, dirty);\n\n          if (dirty[0] & 2320) {\n            transition_in(if_block, 1);\n          }\n        } else {\n          if_block = create_if_block(ctx2);\n          if_block.c();\n          transition_in(if_block, 1);\n          if_block.m(div1, null);\n        }\n      } else if (if_block) {\n        group_outros();\n        transition_out(if_block, 1, 1, () => {\n          if_block = null;\n        });\n        check_outros();\n      }\n\n      if (!current || dirty[0] & 4194304 && div1_style_value !== (div1_style_value = ctx2[22].preview)) {\n        attr(div1, \"style\", div1_style_value);\n      }\n\n      const help_changes = {};\n      if (dirty[0] & 4096) help_changes.locale = ctx2[12];\n      if (dirty[0] & 2097152) help_changes.actions = ctx2[21].leftActions;\n      if (dirty[0] & 512) help_changes.visible = ctx2[9] === \"help\";\n      help2.$set(help_changes);\n      const toc_changes = {};\n      if (dirty[0] & 262144) toc_changes.hast = ctx2[18];\n      if (dirty[0] & 4096) toc_changes.locale = ctx2[12];\n      if (dirty[0] & 1048576) toc_changes.currentBlockIndex = ctx2[20];\n      if (dirty[0] & 512) toc_changes.visible = ctx2[9] === \"toc\";\n      toc2.$set(toc_changes);\n\n      if (!current || dirty[0] & 512) {\n        toggle_class(div3, \"bytemd-hidden\", ctx2[9] === false);\n      }\n\n      const status_changes = {};\n      if (dirty[0] & 4096) status_changes.locale = ctx2[12];\n      if (dirty[0] & 2064) status_changes.showSync = !ctx2[4] && ctx2[11];\n      if (dirty[0] & 65536) status_changes.value = ctx2[16];\n      if (dirty[0] & 131072) status_changes.syncEnabled = ctx2[17];\n      if (dirty[0] & 33) status_changes.islimited = ctx2[0].length > ctx2[5];\n      status.$set(status_changes);\n\n      if (!current || dirty[0] & 2304) {\n        toggle_class(div5, \"bytemd-split\", ctx2[11] && ctx2[8] === false);\n      }\n\n      if (!current || dirty[0] & 32768) {\n        toggle_class(div5, \"bytemd-fullscreen\", ctx2[15]);\n      }\n    },\n\n    i(local) {\n      if (current) return;\n      transition_in(toolbar.$$.fragment, local);\n      transition_in(if_block);\n      transition_in(help2.$$.fragment, local);\n      transition_in(toc2.$$.fragment, local);\n      transition_in(status.$$.fragment, local);\n      current = true;\n    },\n\n    o(local) {\n      transition_out(toolbar.$$.fragment, local);\n      transition_out(if_block);\n      transition_out(help2.$$.fragment, local);\n      transition_out(toc2.$$.fragment, local);\n      transition_out(status.$$.fragment, local);\n      current = false;\n    },\n\n    d(detaching) {\n      if (detaching) detach(div5);\n      destroy_component(toolbar);\n      ctx[34](null);\n      if (if_block) if_block.d();\n      ctx[36](null);\n      destroy_component(help2);\n      destroy_component(toc2);\n      destroy_component(status);\n      ctx[42](null);\n      mounted = false;\n      run_all(dispose);\n    }\n\n  };\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  let mergedLocale;\n  let actions;\n  let split;\n  let styles;\n  let context;\n  let {\n    value = \"\"\n  } = $$props;\n  let {\n    plugins = []\n  } = $$props;\n  let {\n    sanitize = void 0\n  } = $$props;\n  let {\n    remarkRehype: remarkRehype2 = void 0\n  } = $$props;\n  let {\n    mode = \"auto\"\n  } = $$props;\n  let {\n    previewDebounce = 300\n  } = $$props;\n  let {\n    placeholder = void 0\n  } = $$props;\n  let {\n    editorConfig = void 0\n  } = $$props;\n  let {\n    locale = void 0\n  } = $$props;\n  let {\n    uploadImages = void 0\n  } = $$props;\n  let {\n    overridePreview = void 0\n  } = $$props;\n  let {\n    maxLength = Infinity\n  } = $$props;\n  const dispatch = createEventDispatcher();\n  let root;\n  let editorEl;\n  let previewEl;\n  let containerWidth = Infinity;\n  let codemirror;\n  let editor;\n  let activeTab;\n  let fullscreen2 = false;\n  let sidebar = false;\n  let cbs = [];\n  let keyMap = {};\n\n  function on() {\n    cbs = plugins.map(p => {\n      var _a;\n\n      return (_a = p.editorEffect) == null ? void 0 : _a.call(p, context);\n    });\n    keyMap = {};\n    actions.leftActions.forEach(({\n      handler\n    }) => {\n      if ((handler == null ? void 0 : handler.type) === \"action\" && handler.shortcut) {\n        keyMap[handler.shortcut] = () => {\n          handler.click(context);\n        };\n      }\n    });\n    editor.addKeyMap(keyMap);\n  }\n\n  function off() {\n    cbs.forEach(cb => cb && cb());\n    editor == null ? void 0 : editor.removeKeyMap(keyMap);\n  }\n\n  let debouncedValue = value;\n  const setDebouncedValue = (0,lodash_es__WEBPACK_IMPORTED_MODULE_23__[\"default\"])(value2 => {\n    $$invalidate(16, debouncedValue = value2);\n    overridePreview == null ? void 0 : overridePreview(previewEl, {\n      value: debouncedValue,\n      plugins,\n      sanitize,\n      remarkRehype: remarkRehype2\n    });\n  }, previewDebounce);\n  let syncEnabled = true;\n  let editCalled = false;\n  let previewCalled = false;\n  let editPs;\n  let previewPs;\n  let hast = {\n    type: \"root\",\n    children: []\n  };\n  let vfile;\n  let currentBlockIndex = 0;\n  onMount(async () => {\n    $$invalidate(30, codemirror = createCodeMirror());\n    $$invalidate(7, editor = codemirror(editorEl, {\n      value,\n      mode: \"yaml-frontmatter\",\n      lineWrapping: true,\n      tabSize: 8,\n      indentUnit: 4,\n      extraKeys: {\n        Enter: \"newlineAndIndentContinueMarkdownList\"\n      },\n      ...editorConfig,\n      placeholder\n    }));\n    editor.addKeyMap({\n      Tab: \"indentMore\",\n      \"Shift-Tab\": \"indentLess\"\n    });\n    editor.on(\"change\", () => {\n      dispatch(\"change\", {\n        value: editor.getValue()\n      });\n    });\n    const updateBlockPositions = (0,lodash_es__WEBPACK_IMPORTED_MODULE_24__[\"default\"])(() => {\n      editPs = [];\n      previewPs = [];\n      const scrollInfo = editor.getScrollInfo();\n      const body = previewEl.childNodes[0];\n      if (!(body instanceof HTMLElement)) return;\n      const leftNodes = hast.children.filter(v => v.type === \"element\");\n      const rightNodes = [...body.childNodes].filter(v => v instanceof HTMLElement);\n\n      for (let i = 0; i < leftNodes.length; i++) {\n        const leftNode = leftNodes[i];\n        const rightNode = rightNodes[i];\n\n        if (!leftNode.position) {\n          continue;\n        }\n\n        const left = editor.heightAtLine(leftNode.position.start.line - 1, \"local\") / (scrollInfo.height - scrollInfo.clientHeight);\n        const right = (rightNode.offsetTop - body.offsetTop) / (previewEl.scrollHeight - previewEl.clientHeight);\n\n        if (left >= 1 || right >= 1) {\n          break;\n        }\n\n        editPs.push(left);\n        previewPs.push(right);\n      }\n\n      editPs.push(1);\n      previewPs.push(1);\n    }, 1e3);\n\n    const editorScrollHandler = () => {\n      if (overridePreview) return;\n      if (!syncEnabled) return;\n\n      if (previewCalled) {\n        previewCalled = false;\n        return;\n      }\n\n      updateBlockPositions();\n      const info = editor.getScrollInfo();\n      const leftRatio = info.top / (info.height - info.clientHeight);\n      const startIndex = findStartIndex(leftRatio, editPs);\n      const rightRatio = (leftRatio - editPs[startIndex]) * (previewPs[startIndex + 1] - previewPs[startIndex]) / (editPs[startIndex + 1] - editPs[startIndex]) + previewPs[startIndex];\n      previewEl.scrollTo(0, rightRatio * (previewEl.scrollHeight - previewEl.clientHeight));\n      editCalled = true;\n    };\n\n    const previewScrollHandler = () => {\n      if (overridePreview) return;\n      updateBlockPositions();\n      $$invalidate(20, currentBlockIndex = findStartIndex(previewEl.scrollTop / (previewEl.scrollHeight - previewEl.offsetHeight), previewPs));\n      if (!syncEnabled) return;\n\n      if (editCalled) {\n        editCalled = false;\n        return;\n      }\n\n      const rightRatio = previewEl.scrollTop / (previewEl.scrollHeight - previewEl.clientHeight);\n      const startIndex = findStartIndex(rightRatio, previewPs);\n      const leftRatio = (rightRatio - previewPs[startIndex]) * (editPs[startIndex + 1] - editPs[startIndex]) / (previewPs[startIndex + 1] - previewPs[startIndex]) + editPs[startIndex];\n\n      if (isNaN(leftRatio)) {\n        return;\n      }\n\n      const info = editor.getScrollInfo();\n      editor.scrollTo(0, leftRatio * (info.height - info.clientHeight));\n      previewCalled = true;\n    };\n\n    editor.on(\"scroll\", editorScrollHandler);\n    previewEl.addEventListener(\"scroll\", previewScrollHandler, {\n      passive: true\n    });\n\n    const handleImages = async (e, itemList) => {\n      if (!uploadImages) return;\n      const files = Array.from(itemList != null ? itemList : []).map(item => {\n        if (item.type.startsWith(\"image/\")) {\n          return item.getAsFile();\n        }\n      }).filter(f => f != null);\n\n      if (files.length) {\n        e.preventDefault();\n        await handleImageUpload(context, uploadImages, files);\n      }\n    };\n\n    editor.on(\"drop\", async (_, e) => {\n      var _a;\n\n      handleImages(e, (_a = e.dataTransfer) == null ? void 0 : _a.items);\n    });\n    editor.on(\"paste\", async (_, e) => {\n      var _a;\n\n      handleImages(e, (_a = e.clipboardData) == null ? void 0 : _a.items);\n    });\n    new ResizeObserver(entries => {\n      $$invalidate(29, containerWidth = entries[0].contentRect.width);\n    }).observe(root, {\n      box: \"border-box\"\n    });\n  });\n  onDestroy(off);\n\n  const key_handler = e => {\n    editor.setOption(\"keyMap\", e.detail);\n    editor.focus();\n  };\n\n  const tab_handler = e => {\n    const v = e.detail;\n\n    if (split) {\n      $$invalidate(8, activeTab = activeTab === v ? false : v);\n    } else {\n      $$invalidate(8, activeTab = v);\n    }\n\n    if (activeTab === \"write\") {\n      tick().then(() => {\n        editor && editor.focus();\n      });\n    }\n\n    if (v === \"write\") {\n      tick().then(() => {\n        editor && editor.setSize(null, null);\n      });\n    }\n  };\n\n  const click_handler = e => {\n    switch (e.detail) {\n      case \"fullscreen\":\n        $$invalidate(15, fullscreen2 = !fullscreen2);\n        break;\n\n      case \"help\":\n        $$invalidate(9, sidebar = sidebar === \"help\" ? false : \"help\");\n        break;\n\n      case \"toc\":\n        $$invalidate(9, sidebar = sidebar === \"toc\" ? false : \"toc\");\n        break;\n    }\n  };\n\n  function div0_binding($$value) {\n    binding_callbacks[$$value ? \"unshift\" : \"push\"](() => {\n      editorEl = $$value;\n      $$invalidate(13, editorEl);\n    });\n  }\n\n  const hast_handler = e => {\n    $$invalidate(18, hast = e.detail.hast);\n    $$invalidate(19, vfile = e.detail.file);\n  };\n\n  function div1_binding($$value) {\n    binding_callbacks[$$value ? \"unshift\" : \"push\"](() => {\n      previewEl = $$value;\n      $$invalidate(14, previewEl);\n    });\n  }\n\n  const click_handler_1 = () => {\n    $$invalidate(9, sidebar = false);\n  };\n\n  const keydown_handler = e => {\n    if ([\"Enter\", \"Space\"].includes(e.code)) {\n      $$invalidate(9, sidebar = false);\n    }\n  };\n\n  const click_handler_2 = e => {\n    const headings = previewEl.querySelectorAll(\"h1,h2,h3,h4,h5,h6\");\n    headings[e.detail].scrollIntoView();\n  };\n\n  const sync_handler = e => {\n    $$invalidate(17, syncEnabled = e.detail);\n  };\n\n  const top_handler = () => {\n    editor.scrollTo(null, 0);\n    previewEl.scrollTo({\n      top: 0\n    });\n  };\n\n  function div5_binding($$value) {\n    binding_callbacks[$$value ? \"unshift\" : \"push\"](() => {\n      root = $$value;\n      $$invalidate(6, root);\n    });\n  }\n\n  $$self.$$set = $$props2 => {\n    if (\"value\" in $$props2) $$invalidate(0, value = $$props2.value);\n    if (\"plugins\" in $$props2) $$invalidate(1, plugins = $$props2.plugins);\n    if (\"sanitize\" in $$props2) $$invalidate(2, sanitize = $$props2.sanitize);\n    if (\"remarkRehype\" in $$props2) $$invalidate(3, remarkRehype2 = $$props2.remarkRehype);\n    if (\"mode\" in $$props2) $$invalidate(23, mode = $$props2.mode);\n    if (\"previewDebounce\" in $$props2) $$invalidate(24, previewDebounce = $$props2.previewDebounce);\n    if (\"placeholder\" in $$props2) $$invalidate(25, placeholder = $$props2.placeholder);\n    if (\"editorConfig\" in $$props2) $$invalidate(26, editorConfig = $$props2.editorConfig);\n    if (\"locale\" in $$props2) $$invalidate(27, locale = $$props2.locale);\n    if (\"uploadImages\" in $$props2) $$invalidate(28, uploadImages = $$props2.uploadImages);\n    if (\"overridePreview\" in $$props2) $$invalidate(4, overridePreview = $$props2.overridePreview);\n    if (\"maxLength\" in $$props2) $$invalidate(5, maxLength = $$props2.maxLength);\n  };\n\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty[0] & 134217728) {\n      $$invalidate(12, mergedLocale = { ...en,\n        ...locale\n      });\n    }\n\n    if ($$self.$$.dirty[0] & 268439554) {\n      $$invalidate(21, actions = getBuiltinActions(mergedLocale, plugins, uploadImages));\n    }\n\n    if ($$self.$$.dirty[0] & 545259520) {\n      $$invalidate(11, split = mode === \"split\" || mode === \"auto\" && containerWidth >= 800);\n    }\n\n    if ($$self.$$.dirty[0] & 2048) {\n      (_ => {\n        if (split) $$invalidate(8, activeTab = false);\n      })();\n    }\n\n    if ($$self.$$.dirty[0] & 2816) {\n      $$invalidate(22, styles = (() => {\n        let edit;\n        let preview2;\n\n        if (split && activeTab === false) {\n          if (sidebar) {\n            edit = `width:calc(50% - ${sidebar ? 140 : 0}px)`;\n            preview2 = `width:calc(50% - ${sidebar ? 140 : 0}px)`;\n          } else {\n            edit = \"width:50%\";\n            preview2 = \"width:50%\";\n          }\n        } else if (activeTab === \"preview\") {\n          edit = \"display:none\";\n          preview2 = `width:calc(100% - ${sidebar ? 280 : 0}px)`;\n        } else {\n          edit = `width:calc(100% - ${sidebar ? 280 : 0}px)`;\n          preview2 = \"display:none\";\n        }\n\n        return {\n          edit,\n          preview: preview2\n        };\n      })());\n    }\n\n    if ($$self.$$.dirty[0] & 1073742016) {\n      $$invalidate(10, context = (() => {\n        const context2 = {\n          codemirror,\n          editor,\n          root,\n          ...createEditorUtils(codemirror, editor)\n        };\n        return context2;\n      })());\n    }\n\n    if ($$self.$$.dirty[0] & 1) {\n      setDebouncedValue(value);\n    }\n\n    if ($$self.$$.dirty[0] & 129) {\n      if (editor && value !== editor.getValue()) {\n        editor.setValue(value);\n      }\n    }\n\n    if ($$self.$$.dirty[0] & 130) {\n      if (editor && plugins) {\n        off();\n        tick().then(() => {\n          on();\n        });\n      }\n    }\n  };\n\n  return [value, plugins, sanitize, remarkRehype2, overridePreview, maxLength, root, editor, activeTab, sidebar, context, split, mergedLocale, editorEl, previewEl, fullscreen2, debouncedValue, syncEnabled, hast, vfile, currentBlockIndex, actions, styles, mode, previewDebounce, placeholder, editorConfig, locale, uploadImages, containerWidth, codemirror, key_handler, tab_handler, click_handler, div0_binding, hast_handler, div1_binding, click_handler_1, keydown_handler, click_handler_2, sync_handler, top_handler, div5_binding];\n}\n\nclass Editor extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance, create_fragment, not_equal, {\n      value: 0,\n      plugins: 1,\n      sanitize: 2,\n      remarkRehype: 3,\n      mode: 23,\n      previewDebounce: 24,\n      placeholder: 25,\n      editorConfig: 26,\n      locale: 27,\n      uploadImages: 28,\n      overridePreview: 4,\n      maxLength: 5\n    }, null, [-1, -1]);\n  }\n\n}\n\n\n\n//# sourceURL=webpack://vadmin-front/./node_modules/bytemd/dist/index.mjs?");

/***/ })

}]);
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkvadmin_front"] = self["webpackChunkvadmin_front"] || []).push([["vendors-node_modules_select-files_dist_index_esm_js-node_modules_rehype-raw_index_js-node_mod-1c0be0"],{

/***/ "./node_modules/select-files/dist/index.esm.js":
/*!*****************************************************!*\
  !*** ./node_modules/select-files/dist/index.esm.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Creates a virtual file input element (`<input type=\"file\" />`) with options.\n * @param options\n */\nvar createInputFile = function (ref) {\n  if (ref === void 0) ref = {};\n  var accept = ref.accept;\n  if (accept === void 0) accept = '';\n  var capture = ref.capture;\n  if (capture === void 0) capture = false;\n  var multiple = ref.multiple;\n  if (multiple === void 0) multiple = false;\n  var input = document.createElement('input');\n  input.type = 'file';\n  input.accept = accept;\n  input.capture = capture;\n  input.multiple = multiple;\n  return input;\n};\n/**\n * Virtually creates a file input element (`<input type=\"file\" />`), triggers it\n * and returns selected files.\n *\n * @example\n * selectFiles({ accept: 'image/*', multiple: true }).then(files => {\n *   // ...\n * });\n *\n * @param options\n */\n\n\nvar selectFiles = function (options) {\n  return new Promise(function (resolve) {\n    var input = createInputFile(options);\n    input.addEventListener('change', function () {\n      return resolve(input.files || null);\n    });\n    setTimeout(function () {\n      var event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    }, 0);\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (selectFiles);\n\n//# sourceURL=webpack://vadmin-front/./node_modules/select-files/dist/index.esm.js?");

/***/ }),

/***/ "./node_modules/rehype-raw/index.js":
/*!******************************************!*\
  !*** ./node_modules/rehype-raw/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ rehypeRaw; }\n/* harmony export */ });\n/* harmony import */ var hast_util_raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-raw */ \"./node_modules/hast-util-raw/lib/index.js\");\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\n\nfunction rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result =\n    /** @type {Root} */\n    (0,hast_util_raw__WEBPACK_IMPORTED_MODULE_0__.raw)(tree, file, options);\n    return result;\n  };\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/rehype-raw/index.js?");

/***/ }),

/***/ "./node_modules/rehype-sanitize/index.js":
/*!***********************************************!*\
  !*** ./node_modules/rehype-sanitize/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ rehypeSanitize; },\n/* harmony export */   \"defaultSchema\": function() { return /* reexport safe */ hast_util_sanitize__WEBPACK_IMPORTED_MODULE_0__.defaultSchema; }\n/* harmony export */ });\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-sanitize */ \"./node_modules/hast-util-sanitize/lib/schema.js\");\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-sanitize */ \"./node_modules/hast-util-sanitize/lib/index.js\");\n/**\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-sanitize').Schema} Options\n *   The sanitation schema defines how and if nodes and properties should be cleaned.\n *   See `hast-util-sanitize`.\n *   The default schema is exported as `defaultSchema`.\n */\n\n/**\n * Plugin to sanitize HTML.\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root, Root>}\n */\n\nfunction rehypeSanitize(options = hast_util_sanitize__WEBPACK_IMPORTED_MODULE_0__.defaultSchema) {\n  // @ts-expect-error: assume input `root` matches output root.\n  return tree => (0,hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__.sanitize)(tree, options);\n}\n\n\n//# sourceURL=webpack://vadmin-front/./node_modules/rehype-sanitize/index.js?");

/***/ }),

/***/ "./node_modules/rehype-stringify/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/rehype-stringify/lib/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ rehypeStringify; }\n/* harmony export */ });\n/* harmony import */ var hast_util_to_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-to-html */ \"./node_modules/hast-util-to-html/lib/index.js\");\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('hast-util-to-html').Options} Options\n */\n\n/** @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>} */\n\nfunction rehypeStringify(config) {\n  const processorSettings =\n  /** @type {Options} */\n  this.data('settings');\n  const settings = Object.assign({}, processorSettings, config);\n  Object.assign(this, {\n    Compiler: compiler\n  });\n  /**\n   * @type {import('unified').CompilerFunction<Node, string>}\n   */\n\n  function compiler(tree) {\n    return (0,hast_util_to_html__WEBPACK_IMPORTED_MODULE_0__.toHtml)(tree, settings);\n  }\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/rehype-stringify/lib/index.js?");

/***/ }),

/***/ "./node_modules/remark-breaks/index.js":
/*!*********************************************!*\
  !*** ./node_modules/remark-breaks/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ remarkBreaks; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! unist-util-visit */ \"./node_modules/unist-util-visit/lib/index.js\");\n\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nconst find = /[\\t ]*(?:\\r?\\n|\\r)/g;\n/**\n * Plugin to support hard breaks without needing spaces or escapes (turns enters\n * into `<br>`s).\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\n\nfunction remarkBreaks() {\n  return tree => {\n    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_1__.visit)(tree, 'text', (node, index, parent) => {\n      /** @type {PhrasingContent[]} */\n      const result = [];\n      let start = 0;\n      find.lastIndex = 0;\n      let match = find.exec(node.value);\n\n      while (match) {\n        const position = match.index;\n\n        if (start !== position) {\n          result.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          });\n        }\n\n        result.push({\n          type: 'break'\n        });\n        start = position + match[0].length;\n        match = find.exec(node.value);\n      }\n\n      if (result.length > 0 && parent && typeof index === 'number') {\n        if (start < node.value.length) {\n          result.push({\n            type: 'text',\n            value: node.value.slice(start)\n          });\n        }\n\n        parent.children.splice(index, 1, ...result);\n        return index + result.length;\n      }\n    });\n  };\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/remark-breaks/index.js?");

/***/ }),

/***/ "./node_modules/remark-frontmatter/index.js":
/*!**************************************************!*\
  !*** ./node_modules/remark-frontmatter/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ remarkFrontmatter; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var micromark_extension_frontmatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-extension-frontmatter */ \"./node_modules/micromark-extension-frontmatter/dev/lib/syntax.js\");\n/* harmony import */ var mdast_util_frontmatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mdast-util-frontmatter */ \"./node_modules/mdast-util-frontmatter/lib/index.js\");\n\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\n\n/**\n * Plugin to add support for frontmatter.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\n\nfunction remarkFrontmatter(options = 'yaml') {\n  const data = this.data();\n  add('micromarkExtensions', (0,micromark_extension_frontmatter__WEBPACK_IMPORTED_MODULE_1__.frontmatter)(options));\n  add('fromMarkdownExtensions', (0,mdast_util_frontmatter__WEBPACK_IMPORTED_MODULE_2__.frontmatterFromMarkdown)(options));\n  add('toMarkdownExtensions', (0,mdast_util_frontmatter__WEBPACK_IMPORTED_MODULE_2__.frontmatterToMarkdown)(options));\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n\n  function add(field, value) {\n    const list =\n    /** @type {unknown[]} */\n    // Other extensions\n\n    /* c8 ignore next 2 */\n    data[field] ? data[field] : data[field] = [];\n    list.push(value);\n  }\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/remark-frontmatter/index.js?");

/***/ }),

/***/ "./node_modules/remark-gemoji/index.js":
/*!*********************************************!*\
  !*** ./node_modules/remark-gemoji/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ remarkGemoji; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var gemoji__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gemoji */ \"./node_modules/gemoji/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! unist-util-visit */ \"./node_modules/unist-util-visit/lib/index.js\");\n\n\n/**\n * @typedef {import('mdast').Root} Root\n */\n\n\nconst find = /:(\\+1|[-\\w]+):/g;\nconst own = {}.hasOwnProperty;\n/**\n * Plugin to turn gemoji shortcodes (`:+1:`) into emoji (`👍`).\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\n\nfunction remarkGemoji() {\n  return tree => {\n    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_1__.visit)(tree, 'text', node => {\n      const value = node.value;\n      /** @type {string[]} */\n\n      const slices = [];\n      find.lastIndex = 0;\n      let match = find.exec(value);\n      let start = 0;\n\n      while (match) {\n        const emoji =\n        /** @type {keyof nameToEmoji} */\n        match[1];\n        const position = match.index;\n\n        if (own.call(gemoji__WEBPACK_IMPORTED_MODULE_2__.nameToEmoji, emoji)) {\n          if (start !== position) {\n            slices.push(value.slice(start, position));\n          }\n\n          slices.push(gemoji__WEBPACK_IMPORTED_MODULE_2__.nameToEmoji[emoji]);\n          start = position + match[0].length;\n        } else {\n          find.lastIndex = position + 1;\n        }\n\n        match = find.exec(value);\n      }\n\n      if (slices.length > 0) {\n        slices.push(value.slice(start));\n        node.value = slices.join('');\n      }\n    });\n  };\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/remark-gemoji/index.js?");

/***/ }),

/***/ "./node_modules/remark-gfm/index.js":
/*!******************************************!*\
  !*** ./node_modules/remark-gfm/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ remarkGfm; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var micromark_extension_gfm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-extension-gfm */ \"./node_modules/micromark-extension-gfm/index.js\");\n/* harmony import */ var mdast_util_gfm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mdast-util-gfm */ \"./node_modules/mdast-util-gfm/lib/index.js\");\n\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\n\nfunction remarkGfm(options = {}) {\n  const data = this.data();\n  add('micromarkExtensions', (0,micromark_extension_gfm__WEBPACK_IMPORTED_MODULE_1__.gfm)(options));\n  add('fromMarkdownExtensions', (0,mdast_util_gfm__WEBPACK_IMPORTED_MODULE_2__.gfmFromMarkdown)());\n  add('toMarkdownExtensions', (0,mdast_util_gfm__WEBPACK_IMPORTED_MODULE_2__.gfmToMarkdown)(options));\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n\n  function add(field, value) {\n    const list =\n    /** @type {unknown[]} */\n    // Other extensions\n\n    /* c8 ignore next 2 */\n    data[field] ? data[field] : data[field] = [];\n    list.push(value);\n  }\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/remark-gfm/index.js?");

/***/ }),

/***/ "./node_modules/remark-parse/index.js":
/*!********************************************!*\
  !*** ./node_modules/remark-parse/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/remark-parse/lib/index.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_lib_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n//# sourceURL=webpack://vadmin-front/./node_modules/remark-parse/index.js?");

/***/ }),

/***/ "./node_modules/remark-parse/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/remark-parse/lib/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ remarkParse; }\n/* harmony export */ });\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-from-markdown */ \"./node_modules/mdast-util-from-markdown/dev/lib/index.js\");\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\n\nfunction remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = doc => {\n    // Assume options.\n    const settings =\n    /** @type {Options} */\n    this.data('settings');\n    return (0,mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_0__.fromMarkdown)(doc, Object.assign({}, settings, options, {\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: this.data('micromarkExtensions') || [],\n      mdastExtensions: this.data('fromMarkdownExtensions') || []\n    }));\n  };\n\n  Object.assign(this, {\n    Parser: parser\n  });\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/remark-parse/lib/index.js?");

/***/ }),

/***/ "./node_modules/remark-rehype/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/remark-rehype/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"./node_modules/mdast-util-to-hast/lib/index.js\");\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n // Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\n\nconst remarkRehype =\n/** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\nfunction (destination, options) {\n  return destination && 'run' in destination ? bridge(destination, options) : mutate(destination || options);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (remarkRehype);\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\n\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run((0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(node, options), file, error => {\n      next(error);\n    });\n  };\n}\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\n\n\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return node => (0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(node, options);\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/remark-rehype/lib/index.js?");

/***/ }),

/***/ "./node_modules/space-separated-tokens/index.js":
/*!******************************************************!*\
  !*** ./node_modules/space-separated-tokens/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parse\": function() { return /* binding */ parse; },\n/* harmony export */   \"stringify\": function() { return /* binding */ stringify; }\n/* harmony export */ });\n/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nfunction parse(value) {\n  const input = String(value || '').trim();\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : [];\n}\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\n\nfunction stringify(values) {\n  return values.join(' ').trim();\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/space-separated-tokens/index.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/constant/dangerous.js":
/*!*******************************************************************!*\
  !*** ./node_modules/stringify-entities/lib/constant/dangerous.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dangerous\": function() { return /* binding */ dangerous; }\n/* harmony export */ });\n/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nconst dangerous = ['cent', 'copy', 'divide', 'gt', 'lt', 'not', 'para', 'times'];\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/constant/dangerous.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/core.js":
/*!*****************************************************!*\
  !*** ./node_modules/stringify-entities/lib/core.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"core\": function() { return /* binding */ core; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n\n\n/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nfunction core(value, options) {\n  value = value.replace(options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g, basic);\n\n  if (options.subset || options.escapeOnly) {\n    return value;\n  }\n\n  return value // Surrogate pairs.\n  .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate) // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n  // non-ASCII ones).\n  .replace( // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g, basic);\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n\n  function surrogate(pair, index, all) {\n    return options.format((pair.charCodeAt(0) - 0xd800) * 0x400 + pair.charCodeAt(1) - 0xdc00 + 0x10000, all.charCodeAt(index + 2), options);\n  }\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n\n\n  function basic(character, index, all) {\n    return options.format(character.charCodeAt(0), all.charCodeAt(index + 1), options);\n  }\n}\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\n\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = [];\n  let index = -1;\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'));\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g');\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/core.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/stringify-entities/lib/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringifyEntities\": function() { return /* binding */ stringifyEntities; },\n/* harmony export */   \"stringifyEntitiesLight\": function() { return /* binding */ stringifyEntitiesLight; }\n/* harmony export */ });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/stringify-entities/lib/core.js\");\n/* harmony import */ var _util_format_smart_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/format-smart.js */ \"./node_modules/stringify-entities/lib/util/format-smart.js\");\n/* harmony import */ var _util_format_basic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/format-basic.js */ \"./node_modules/stringify-entities/lib/util/format-basic.js\");\n/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\n\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\n\nfunction stringifyEntities(value, options) {\n  return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.core)(value, Object.assign({\n    format: _util_format_smart_js__WEBPACK_IMPORTED_MODULE_1__.formatSmart\n  }, options));\n}\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\n\nfunction stringifyEntitiesLight(value, options) {\n  return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.core)(value, Object.assign({\n    format: _util_format_basic_js__WEBPACK_IMPORTED_MODULE_2__.formatBasic\n  }, options));\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/index.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/util/format-basic.js":
/*!******************************************************************!*\
  !*** ./node_modules/stringify-entities/lib/util/format-basic.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formatBasic\": function() { return /* binding */ formatBasic; }\n/* harmony export */ });\n/**\n * The smallest way to encode a character.\n *\n * @param {number} code\n * @returns {string}\n */\nfunction formatBasic(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';';\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/util/format-basic.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/util/format-smart.js":
/*!******************************************************************!*\
  !*** ./node_modules/stringify-entities/lib/util/format-smart.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formatSmart\": function() { return /* binding */ formatSmart; }\n/* harmony export */ });\n/* harmony import */ var _to_hexadecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./to-hexadecimal.js */ \"./node_modules/stringify-entities/lib/util/to-hexadecimal.js\");\n/* harmony import */ var _to_decimal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./to-decimal.js */ \"./node_modules/stringify-entities/lib/util/to-decimal.js\");\n/* harmony import */ var _to_named_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./to-named.js */ \"./node_modules/stringify-entities/lib/util/to-named.js\");\n/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\n\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\n\nfunction formatSmart(code, next, options) {\n  let numeric = (0,_to_hexadecimal_js__WEBPACK_IMPORTED_MODULE_0__.toHexadecimal)(code, next, options.omitOptionalSemicolons);\n  /** @type {string|undefined} */\n\n  let named;\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = (0,_to_named_js__WEBPACK_IMPORTED_MODULE_1__.toNamed)(code, next, options.omitOptionalSemicolons, options.attribute);\n  } // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n\n\n  if ((options.useShortestReferences || !named) && options.useShortestReferences) {\n    const decimal = (0,_to_decimal_js__WEBPACK_IMPORTED_MODULE_2__.toDecimal)(code, next, options.omitOptionalSemicolons);\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal;\n    }\n  }\n\n  return named && (!options.useShortestReferences || named.length < numeric.length) ? named : numeric;\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/util/format-smart.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/util/to-decimal.js":
/*!****************************************************************!*\
  !*** ./node_modules/stringify-entities/lib/util/to-decimal.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toDecimal\": function() { return /* binding */ toDecimal; }\n/* harmony export */ });\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next)) ? value : value + ';';\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/util/to-decimal.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/util/to-hexadecimal.js":
/*!********************************************************************!*\
  !*** ./node_modules/stringify-entities/lib/util/to-hexadecimal.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toHexadecimal\": function() { return /* binding */ toHexadecimal; }\n/* harmony export */ });\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase();\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next)) ? value : value + ';';\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/util/to-hexadecimal.js?");

/***/ }),

/***/ "./node_modules/stringify-entities/lib/util/to-named.js":
/*!**************************************************************!*\
  !*** ./node_modules/stringify-entities/lib/util/to-named.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toNamed\": function() { return /* binding */ toNamed; }\n/* harmony export */ });\n/* harmony import */ var character_entities_legacy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! character-entities-legacy */ \"./node_modules/character-entities-legacy/index.js\");\n/* harmony import */ var character_entities_html4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! character-entities-html4 */ \"./node_modules/character-entities-html4/index.js\");\n/* harmony import */ var _constant_dangerous_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant/dangerous.js */ \"./node_modules/stringify-entities/lib/constant/dangerous.js\");\n\n\n\nconst own = {}.hasOwnProperty;\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\n\nconst characters = {};\n/** @type {string} */\n\nlet key;\n\nfor (key in character_entities_html4__WEBPACK_IMPORTED_MODULE_0__.characterEntitiesHtml4) {\n  if (own.call(character_entities_html4__WEBPACK_IMPORTED_MODULE_0__.characterEntitiesHtml4, key)) {\n    characters[character_entities_html4__WEBPACK_IMPORTED_MODULE_0__.characterEntitiesHtml4[key]] = key;\n  }\n}\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\n\n\nfunction toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code);\n\n  if (own.call(characters, character)) {\n    const name = characters[character];\n    const value = '&' + name;\n\n    if (omit && character_entities_legacy__WEBPACK_IMPORTED_MODULE_1__.characterEntitiesLegacy.includes(name) && !_constant_dangerous_js__WEBPACK_IMPORTED_MODULE_2__.dangerous.includes(name) && (!attribute || next && next !== 61\n    /* `=` */\n    && /[^\\da-z]/i.test(String.fromCharCode(next)))) {\n      return value;\n    }\n\n    return value + ';';\n  }\n\n  return '';\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/stringify-entities/lib/util/to-named.js?");

/***/ }),

/***/ "./node_modules/trim-lines/index.js":
/*!******************************************!*\
  !*** ./node_modules/trim-lines/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trimLines\": function() { return /* binding */ trimLines; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n\nconst tab = 9;\n/* `\\t` */\n\nconst space = 32;\n/* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\n\nfunction trimLines(value) {\n  const source = String(value);\n  const search = /\\r?\\n|\\r/g;\n  let match = search.exec(source);\n  let last = 0;\n  /** @type {Array<string>} */\n\n  const lines = [];\n\n  while (match) {\n    lines.push(trimLine(source.slice(last, match.index), last > 0, true), match[0]);\n    last = match.index + match[0].length;\n    match = search.exec(source);\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false));\n  return lines.join('');\n}\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\n\nfunction trimLine(value, start, end) {\n  let startIndex = 0;\n  let endIndex = value.length;\n\n  if (start) {\n    let code = value.codePointAt(startIndex);\n\n    while (code === tab || code === space) {\n      startIndex++;\n      code = value.codePointAt(startIndex);\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1);\n\n    while (code === tab || code === space) {\n      endIndex--;\n      code = value.codePointAt(endIndex - 1);\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : '';\n}\n\n//# sourceURL=webpack://vadmin-front/./node_modules/trim-lines/index.js?");

/***/ })

}]);